<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="COP_Jenkins" resourceRoot="" soapui-version="5.0.0" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="COP_Requests" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://192.168.100.20:10000/basis</con:endpoint><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:endpoint>http://{ip}:{port}/basis</con:endpoint></con:endpoints><con:resource name="getDepartment" path="/department/get"><con:settings/><con:parameters/><con:method name="Basis" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>405 404 400</con:status><con:params/><con:element xmlns:get="http://192.168.100.20/basis/department/get">get:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:get="http://192.168.100.20/basis/department/get">get:Response</con:element></con:representation><con:request name="getDepartment" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"depId":1
}</con:request><con:originalUri>http://192.168.100.20/basis/department/get</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="queryDepartment" path="/department/query"><con:settings/><con:parameters/><con:method name="Basis" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>500 405 400</con:status><con:params/><con:element xmlns:quer="http://192.168.100.20/basis/department/query">quer:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:quer="http://192.168.100.20/basis/department/query">quer:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="queryDepartment" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"userId":4321,
"entId":123
}</con:request><con:originalUri>http://192.168.100.20/basis/department/query</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="queryWithEmp" path="/department/queryWithEmp"><con:settings/><con:parameters/><con:method name="Basis" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:quer="http://192.168.12.170/basis/department/queryWithEmp">quer:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>400 500</con:status><con:params/><con:element xmlns:quer="http://192.168.12.170/basis/department/queryWithEmp">quer:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="queryWithEmp" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"userId":1,
"entId":123
}</con:request><con:originalUri>http://192.168.12.170/basis/department/queryWithEmp</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="queryWithEmpApp" path="/department/queryWithEmpApp"><con:settings/><con:parameters/><con:method name="Basis" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:quer="http://192.168.12.170/basis/department/queryWithEmpApp">quer:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>400 500</con:status><con:params/><con:element xmlns:quer="http://192.168.12.170/basis/department/queryWithEmpApp">quer:Fault</con:element></con:representation><con:request name="queryWithEmpApp" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"userId":111,
"entId":123
}</con:request><con:originalUri>http://192.168.12.170/basis/department/queryWithEmpApp</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="departmentGet" path="/department/get"><con:settings/><con:parameters/><con:method name="Basis" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:get="http://192.168.12.170/basis/department/get">get:Response</con:element></con:representation><con:request name="departmentGet" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"depId":1
}</con:request><con:originalUri>http://192.168.12.170/basis/department/get</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method><con:method name="Method 2" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:get="http://192.168.12.170/basis/department/get">get:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>400 500</con:status><con:params/><con:element xmlns:get="http://192.168.12.170/basis/department/get">get:Fault</con:element></con:representation><con:request name="Request 1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"depId":34
}</con:request><con:originalUri>http://192.168.12.170/basis/department/get</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="departmentAdd" path="/department/add"><con:settings/><con:parameters/><con:method name="Basis" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:add="http://192.168.100.20/basis/department/add">add:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:add="http://192.168.12.170/basis/department/add">add:Fault</con:element></con:representation><con:request name="departmentAdd" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"name":"呵呵11111124131",
"parentId":73,
"entId":123,
"cpsFlag":1
}</con:request><con:originalUri>http://192.168.100.20/basis/department/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="departmentDelete" path="/department/delete"><con:settings/><con:parameters/><con:method name="Basis" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:add="http://192.168.12.170/basis/department/add">add:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:del="http://192.168.12.170/basis/department/delete">del:Fault</con:element></con:representation><con:request name="departmentDelete" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"depId":66,
"cpsFlag":1
}</con:request><con:originalUri>http://192.168.12.170/basis/department/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="departmentUpdate" path="/department/update"><con:settings/><con:parameters/><con:method name="Basis" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:upd="http://192.168.12.170/basis/department/update">upd:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>400 500</con:status><con:params/><con:element xmlns:upd="http://192.168.12.170/basis/department/update">upd:Fault</con:element></con:representation><con:request name="departmentUpdate" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"depId":7,
"name":"444444",
"parentId":0,
"cpsFlag":1
}</con:request><con:originalUri>http://192.168.12.170/basis/department/update</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="queryEmp" path="/department/queryEmp"><con:settings/><con:parameters/><con:method name="Basis" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:quer="http://192.168.100.20/basis/department/queryEmp">quer:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:quer="http://192.168.100.20/basis/department/queryEmp">quer:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="queryEmp" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"depId":1
}</con:request><con:originalUri>http://192.168.100.20/basis/department/queryEmp</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="addEmp" path="/department/addEmp"><con:settings/><con:parameters/><con:method name="Basis" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:add="http://192.168.12.170/basis/department/addEmp">add:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>400 500</con:status><con:params/><con:element xmlns:add="http://192.168.12.170/basis/department/addEmp">add:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="addEmp" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"depId":99,
"empIds":[1],
"cpsFlag":1
}</con:request><con:originalUri>http://192.168.12.170/basis/department/addEmp</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="delEmp" path="/department/delEmp"><con:settings/><con:parameters/><con:method name="Basis" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:del="http://192.168.12.170/basis/department/delEmp">del:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:del="http://192.168.12.170/basis/department/delEmp">del:Fault</con:element></con:representation><con:request name="delEmp" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"depId":99,
"empIds":[10],
"cpsFlag":1
}</con:request><con:originalUri>http://192.168.12.170/basis/department/delEmp</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="departmentTop" path="/department/top/{depId}"><con:settings/><con:parameters><con:parameter><con:name>depId</con:name><con:value>123</con:value><con:style>TEMPLATE</con:style><con:default>123</con:default></con:parameter></con:parameters><con:method name="Basis" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>405 404 500</con:status><con:params/><con:element xmlns:top="http://192.168.12.170/basis/department/top">top:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:top="http://192.168.12.170/basis/department/top">top:Response</con:element></con:representation><con:request name="departmentTop" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"depId":123
}</con:request><con:originalUri>http://192.168.12.170/basis/department/top</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>depId</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="empTop" path="/department/empTop/{depId}/{empId}"><con:settings/><con:parameters><con:parameter><con:name>depId</con:name><con:value>1</con:value><con:style>TEMPLATE</con:style><con:default>1</con:default></con:parameter><con:parameter><con:name>empId</con:name><con:value>2</con:value><con:style>TEMPLATE</con:style><con:default>2</con:default></con:parameter></con:parameters><con:method name="Basis" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ns="http://192.168.12.170/basis/department/empTop/1/2">ns:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>404 500</con:status><con:params/></con:representation><con:request name="empTop" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"depId":123,
"empId":123
}</con:request><con:originalUri>http://192.168.12.170/basis/department/empTop/1/2</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="empId" value="130" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>depId</con:entry><con:entry>empId</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="employeeGet" path="/employee/get"><con:settings/><con:parameters/><con:method name="Basis" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:get="http://192.168.100.20/basis/employee/get">get:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="employeeGet" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request/><con:originalUri>http://192.168.100.20/basis/employee/get</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="employeeQuery" path="/employee/query"><con:settings/><con:parameters/><con:method name="Basis" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:quer="http://192.168.100.20/basis/employee/query">quer:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:quer="http://192.168.12.170/basis/employee/query">quer:Fault</con:element></con:representation><con:request name="employeeQuery" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"currPage":1,
"recNumPerPage":10,
"name":"for_role_ops3",
"mdn":"18712312303",
"entId":123,
"userId":1211
}</con:request><con:originalUri>http://192.168.100.20/basis/employee/query</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="employeeAdd" path="/employee/add"><con:settings/><con:parameters/><con:method name="Basis" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:add="http://192.168.100.20/basis/employee/add">add:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>400 500</con:status><con:params/><con:element xmlns:add="http://192.168.100.20/basis/employee/add">add:Fault</con:element></con:representation><con:request name="employeeAdd" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"mdn":"17745678934",
"entId":123,
"depId":null,
"name":"ceeeeesss1",
"gender":1,
"remark":"一个专家",
"userName":"ceeeeesss1",
"passWord":"123456"
}</con:request><con:originalUri>http://192.168.100.20/basis/employee/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="employeeDelete" path="/employee/delete"><con:settings/><con:parameters/><con:method name="Basis" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:del="http://192.168.12.170/basis/employee/delete">del:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>400 500</con:status><con:params/><con:element xmlns:del="http://192.168.12.170/basis/employee/delete">del:Fault</con:element></con:representation><con:request name="employeeDelete" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"empId":50
}</con:request><con:originalUri>http://192.168.12.170/basis/employee/delete</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="employeeUpdate" path="/employee/update"><con:settings/><con:parameters/><con:method name="Basis" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:upd="http://192.168.12.170/basis/employee/update">upd:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:upd="http://192.168.12.170/basis/employee/update">upd:Fault</con:element></con:representation><con:request name="employeeUpdate" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"empId":23,
"name":"zhangsan2333",
"gender":2,
"remark":"2333"
}</con:request><con:originalUri>http://192.168.12.170/basis/employee/update</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="addRole" path="/employee/addRole"><con:settings/><con:parameters/><con:method name="Basis" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>500 405</con:status><con:params/><con:element xmlns:add="http://192.168.12.170/basis/employee/addRole">add:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:add="http://192.168.12.170/basis/employee/addRole">add:Response</con:element></con:representation><con:request name="addRole" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{"empId":1,"roleIds":[21]}</con:request><con:originalUri>http://192.168.12.170/basis/employee/addRole</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="delRole" path="/employee/delRole"><con:settings/><con:parameters/><con:method name="Basis" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>500 405</con:status><con:params/><con:element xmlns:del="http://192.168.12.170/basis/employee/delRole">del:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:del="http://192.168.12.170/basis/employee/delRole">del:Response</con:element></con:representation><con:request name="delRole" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{"empId":1,"roleIds":[21]}</con:request><con:originalUri>http://192.168.12.170/basis/employee/delRole</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="attentionAddEmp" path="/attention/addEmp"><con:settings/><con:parameters/><con:method name="Basis" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:add="http://192.168.12.170/basis/attention/addEmp">add:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>400 500</con:status><con:params/><con:element xmlns:add="http://192.168.12.170/basis/attention/addEmp">add:Fault</con:element></con:representation><con:request name="attentionAddEmp" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"userId":123,
"empIds":[116]
}</con:request><con:originalUri>http://192.168.12.170/basis/attention/addEmp</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="attentionDelEmp" path="/attention/delEmp"><con:settings/><con:parameters/><con:method name="Basis" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:del="http://192.168.12.170/basis/attention/delEmp">del:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>400 500</con:status><con:params/><con:element xmlns:del="http://192.168.12.170/basis/attention/delEmp">del:Fault</con:element></con:representation><con:request name="attentionDelEmp" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"userId":1123,
"empIds":[1001,1101,1012]
}</con:request><con:originalUri>http://192.168.12.170/basis/attention/delEmp</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="attentionQueryEmp" path="/attention/queryEmp"><con:settings/><con:parameters/><con:method name="Basis" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:quer="http://192.168.12.170/basis/attention/queryEmp">quer:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:quer="http://192.168.12.170/basis/attention/queryEmp">quer:Fault</con:element></con:representation><con:request name="attentionQueryEmp" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"userId":1
}</con:request><con:originalUri>http://192.168.12.170/basis/attention/queryEmp</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="attentionAddDep" path="/attention/addDep"><con:settings/><con:parameters/><con:method name="Basis" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:add="http://192.168.12.170/basis/attention/addDep">add:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>400 500</con:status><con:params/><con:element xmlns:add="http://192.168.12.170/basis/attention/addDep">add:Fault</con:element></con:representation><con:request name="attentionAddDep" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"depIds":[23423],
"userId":14323
}</con:request><con:originalUri>http://192.168.12.170/basis/attention/addDep</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="attentionDelDep" path="/attention/delDep"><con:settings/><con:parameters/><con:method name="Basis" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:del="http://192.168.12.170/basis/attention/delDep">del:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>400 500</con:status><con:params/><con:element xmlns:del="http://192.168.12.170/basis/attention/delDep">del:Fault</con:element></con:representation><con:request name="attentionDelDep" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"depIds":[23432],
"userId":1234234
}</con:request><con:originalUri>http://192.168.12.170/basis/attention/delDep</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="attentionQueryDep" path="/attention/queryDep"><con:settings/><con:parameters/><con:method name="Basis" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:quer="http://192.168.12.170/basis/attention/queryDep">quer:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:quer="http://192.168.12.170/basis/attention/queryDep">quer:Fault</con:element></con:representation><con:request name="attentionQueryDep" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"userId":2
}</con:request><con:originalUri>http://192.168.12.170/basis/attention/queryDep</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="attentionAddAddr" path="/attention/addAddr"><con:settings/><con:parameters/><con:method name="Basis" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:add="http://192.168.12.170/basis/attention/addAddr">add:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>400 500</con:status><con:params/><con:element xmlns:add="http://192.168.12.170/basis/attention/addAddr">add:Fault</con:element></con:representation><con:request name="attentionAddAddr" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"tableId":-120,
"dataIds":[-1,-2,-3],
"userId":-3
}</con:request><con:originalUri>http://192.168.12.170/basis/attention/addAddr</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="attentionDelAddr" path="/attention/delAddr"><con:settings/><con:parameters/><con:method name="Basis" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:del="http://192.168.12.170/basis/attention/delAddr">del:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>400 500</con:status><con:params/><con:element xmlns:del="http://192.168.12.170/basis/attention/delAddr">del:Fault</con:element></con:representation><con:request name="attentionDelAddr" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"tableId":120,
"dataIds":[100,101,102],
"userId":1
}</con:request><con:originalUri>http://192.168.12.170/basis/attention/delAddr</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="attentionQueryAddr" path="/attention/queryAddr/"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value>1</con:value><con:style>TEMPLATE</con:style><con:default>1</con:default></con:parameter></con:parameters><con:method name="Basis" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:quer="http://192.168.12.170/basis/attention/queryAddr">quer:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>404 405 400</con:status><con:params/><con:element xmlns:quer="http://192.168.12.170/basis/attention/queryAddr">quer:Fault</con:element></con:representation><con:request name="attentionQueryAddr" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"userId":1234
}</con:request><con:originalUri>http://192.168.12.170/basis/attention/queryAddr</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="123" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>userId</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="roleAdd" path="/role/add"><con:settings/><con:parameters/><con:method name="Method 1" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:add="http://192.168.12.170/basis/role/add">add:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:add="http://192.168.12.170/basis/role/add">add:Response</con:element></con:representation><con:request name="Request 1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:request>{"name":"entrole","entId":1314 ,"descr":"角色描述","menuList":[{"menuId":123, "menuName":"name"}],"modelList":[{"modelId":23,"modelName":"tianyiduijiang"}]}</con:request><con:originalUri>http://192.168.12.170/basis/role/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="noticeAdd（load）" path="/notice/add"><con:settings/><con:parameters/><con:method name="Method 1" method="GET"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:add="http://192.168.12.170/basis/role/add">add:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:add="http://192.168.12.170/basis/role/add">add:Response</con:element></con:representation><con:request name="noticeAdd" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request>{"name":"entrole","entId":1314 ,"descr":"角色描述","menuList":[{"menuId":123, "menuName":"name"}],"modelList":[{"modelId":23,"modelName":"tianyiduijiang"}]}</con:request><con:originalUri>http://192.168.12.170/basis/role/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="noticeAdd" path="/notice/add"><con:settings/><con:parameters/><con:method name="Method 1" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>405 400</con:status><con:params/><con:element xmlns:add="http://192.168.12.170/basis/role/add">add:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:add="http://192.168.12.170/basis/role/add">add:Response</con:element></con:representation><con:request name="noticeAdd" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request><![CDATA[{
"userId":1,
"entId":123,
"notice":{
		"title":"新版本发布啦2",
		"content":"<html><body><p>新版本发布啦！</p></body></html>",
		"attachmentUrls":["http://www.baidu.com"]
		}
}]]></con:request><con:originalUri>http://192.168.12.170/basis/role/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request><con:request name="Copy of noticeAdd" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request><![CDATA[{
"userId":1,
"entId":123,
"notice":{
		"title":"新版本发布啦",
		"content":"<html><body><p>新版本发布啦！</p></body></html>",
		"attachmentUrls":["http://www.baidu.com"]
		}
}]]></con:request><con:originalUri>http://192.168.12.170/basis/role/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="noticeAdd2" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>405 400</con:status><con:params/><con:element xmlns:add="http://192.168.100.20/basis/notice/add">add:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:add="http://192.168.100.20/basis/notice/add">add:Response</con:element></con:representation><con:request name="Request 1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request>{
    "userId":123,
    "entId": 8,
    "notice": {
        "title": "放假通知",
        "content": "1111",
        "coverPicUrl":"http: //XXXX"
    }
}
</con:request><con:originalUri>http://192.168.100.20/basis/notice/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="noticeQueryList（load）" path="/notice/queryList"><con:settings/><con:parameters/><con:method name="Method 1" method="GET"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>405 400 404</con:status><con:params/><con:element xmlns:add="http://192.168.12.170/basis/role/add">add:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:add="http://192.168.12.170/basis/role/add">add:Response</con:element></con:representation><con:request name="noticeQueryList" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request>{
"userId":nt,
"entId":nt,
"notice": sting,
"title":string,
"content":string,
"attachmentUrls":sting
}</con:request><con:originalUri>http://192.168.12.170/basis/role/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="noticeQuery" path="/notice/query"><con:settings/><con:parameters/><con:method name="Method 1" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>405 400 404</con:status><con:params/><con:element xmlns:add="http://192.168.12.170/basis/role/add">add:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:add="http://192.168.12.170/basis/role/add">add:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="noticeQuery" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request>{
"entId":123,
"startDate":"",
"endDate":"",
"currPage":1,
"recNumPerPage":20
}</con:request><con:originalUri>http://192.168.12.170/basis/role/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="noticeQueryApp" path="/notice/queryApp/{entId}/{noticeId}"><con:settings/><con:parameters><con:parameter><con:name>entId</con:name><con:value>123</con:value><con:style>TEMPLATE</con:style><con:default>123</con:default></con:parameter><con:parameter><con:name>noticeId</con:name><con:value>1</con:value><con:style>TEMPLATE</con:style><con:default>1</con:default></con:parameter></con:parameters><con:method name="Method 1" method="GET"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>405 400 404 500</con:status><con:params/><con:element xmlns:add="http://192.168.12.170/basis/role/add">add:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:add="http://192.168.12.170/basis/role/add">add:Response</con:element></con:representation><con:request name="noticeQueryApp" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request>{
"noticeId":1,
"entId":123
}</con:request><con:originalUri>http://192.168.12.170/basis/role/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="noticeId" value="130" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>entId</con:entry><con:entry>noticeId</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="noticeGet(load)" path="/notice/get"><con:settings/><con:parameters/><con:method name="Method 1" method="GET"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>405 400 404</con:status><con:params/><con:element xmlns:add="http://192.168.12.170/basis/role/add">add:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:add="http://192.168.12.170/basis/role/add">add:Response</con:element></con:representation><con:request name="noticeGet" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request>{
"userId":nt,
"entId":nt,
"notice": sting,
"title":string,
"content":string,
"attachmentUrls":sting
}</con:request><con:originalUri>http://192.168.12.170/basis/role/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="noticeGet" path="/notice/get/{noticeId}"><con:settings/><con:parameters><con:parameter><con:name>noticeId</con:name><con:value>1</con:value><con:style>TEMPLATE</con:style><con:default>1</con:default></con:parameter></con:parameters><con:method name="Method 1" method="GET"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>405 400 404 500</con:status><con:params/><con:element xmlns:add="http://192.168.12.170/basis/role/add">add:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:add="http://192.168.12.170/basis/role/add">add:Response</con:element></con:representation><con:request name="noticeGet" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request>{
"userId":nt,
"entId":nt,
"notice": sting,
"title":string,
"content":string,
"attachmentUrls":sting
}</con:request><con:originalUri>http://192.168.12.170/basis/role/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>noticeId</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="noticegetApp" path="/notice/getApp/{noticeId}"><con:settings/><con:parameters><con:parameter><con:name>noticeId</con:name><con:value>1</con:value><con:style>TEMPLATE</con:style><con:default>1</con:default></con:parameter></con:parameters><con:method name="Method 1" method="GET"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>405 400 404 500</con:status><con:params/><con:element xmlns:add="http://192.168.12.170/basis/role/add">add:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:add="http://192.168.12.170/basis/role/add">add:Response</con:element></con:representation><con:request name="noticeGetApp" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request>{
"userId":nt,
"entId":nt,
"notice": sting,
"title":string,
"content":string,
"attachmentUrls":sting
}</con:request><con:originalUri>http://192.168.12.170/basis/role/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="noticeId" value="5" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>noticeId</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="noticeTop" path="/notice/top"><con:settings/><con:parameters><con:parameter><con:name>noticeId</con:name><con:value>1</con:value><con:style>TEMPLATE</con:style><con:default>1</con:default></con:parameter></con:parameters><con:method name="Method 1" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>405 400 404</con:status><con:params/><con:element xmlns:add="http://192.168.12.170/basis/role/add">add:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:add="http://192.168.12.170/basis/role/add">add:Response</con:element></con:representation><con:request name="noticeTop" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request>{
"userId":1,
"entId":123,
"noticeId": 1,
}</con:request><con:originalUri>http://192.168.12.170/basis/role/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="noticeId" value="2" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>noticeId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Permission" type="rest" basePath="" definitionUrl="C:\Users\lizzi\Desktop\Permission_1.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/C:/Users/lizzi/Desktop/Permission_1.wadl"><con:part><con:url>file:/C:/Users/lizzi/Desktop/Permission_1.wadl</con:url><con:content><![CDATA[<application xmlns="http://wadl.dev.java.net/2009/02">
  <doc xml:lang="en" title="Permission"/>
  <resources base="http://192.168.12.170:10001">
    <resource path="package/orderFirst" id="orderFirst">
      <doc xml:lang="en" title="orderFirst"/>
      <method name="POST" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request>
          <representation mediaType="application/json"/>
        </request>
        <response status="200">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
        <response status="">
          <representation mediaType="application/json"/>
        </response>
      </method>
    </resource>
    <resource path="package/order" id="order">
      <doc xml:lang="en" title="order"/>
      <method name="POST" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request>
          <representation mediaType="application/json"/>
        </request>
        <response status="200">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
        <response status="">
          <representation mediaType="application/json"/>
        </response>
      </method>
    </resource>
    <resource path="package/disOrder" id="disOrder">
      <doc xml:lang="en" title="disOrder"/>
      <method name="POST" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request>
          <representation mediaType="application/json"/>
        </request>
        <response status="">
          <representation mediaType="application/json"/>
        </response>
        <response status="200">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
      </method>
    </resource>
    <resource path="role/add" id="roleAdd">
      <doc xml:lang="en" title="roleAdd"/>
      <method name="POST" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request>
          <representation mediaType="application/json"/>
        </request>
        <response status="200">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
        <response status="">
          <representation mediaType="application/json"/>
        </response>
      </method>
    </resource>
    <resource path="role/update" id="roleUpdate">
      <doc xml:lang="en" title="roleUpdate"/>
      <method name="POST" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request>
          <representation mediaType="application/json"/>
        </request>
        <response status="">
          <representation mediaType="application/json"/>
        </response>
        <response status="200">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
      </method>
    </resource>
    <resource path="role/delete" id="roleDelete">
      <doc xml:lang="en" title="roleDelete"/>
      <method name="POST" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request>
          <representation mediaType="application/json"/>
        </request>
        <response status="200">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
        <response status="">
          <representation mediaType="application/json"/>
        </response>
      </method>
    </resource>
    <resource path="role/queryAll" id="roleQueryAll">
      <doc xml:lang="en" title="roleQueryAll"/>
      <method name="POST" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request>
          <representation mediaType="application/json"/>
        </request>
        <response status="">
          <representation mediaType="application/json"/>
        </response>
        <response status="200">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
      </method>
    </resource>
    <resource path="role/queryUserRole" id="roleQueryUserRole">
      <doc xml:lang="en" title="roleQueryUserRole"/>
      <method name="POST" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request>
          <representation mediaType="application/json"/>
        </request>
        <response status="200">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
        <response status="">
          <representation mediaType="application/json"/>
        </response>
      </method>
    </resource>
    <resource path="role/get/{id}" id="roleGet">
      <doc xml:lang="en" title="roleGet"/>
      <param name="id" default="1" type="xs:string" required="false" style="template" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <method name="GET" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request/>
        <response status="404">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
        <response status="200">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
      </method>
    </resource>
    <resource path="user/add" id="userAdd">
      <doc xml:lang="en" title="userAdd"/>
      <method name="POST" id="Add">
        <doc xml:lang="en" title="Add"/>
        <request>
          <representation mediaType="application/json"/>
        </request>
        <response status="200">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
        <response status="">
          <representation mediaType="application/json"/>
        </response>
      </method>
    </resource>
    <resource path="user/updatePassword" id="userUpdatePassword">
      <doc xml:lang="en" title="userUpdatePassword"/>
      <method name="POST" id="updatePassword">
        <doc xml:lang="en" title="updatePassword"/>
        <request>
          <representation mediaType="application/json"/>
        </request>
        <response status="200">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
        <response status="">
          <representation mediaType="application/json"/>
        </response>
        <response status="405">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
      </method>
    </resource>
    <resource path="user/updateNickName" id="userUpdateNickName">
      <doc xml:lang="en" title="userUpdateNickName"/>
      <method name="POST" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request>
          <representation mediaType="application/json"/>
        </request>
        <response status="200">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
        <response status="">
          <representation mediaType="application/json"/>
        </response>
      </method>
    </resource>
    <resource path="user/resetPassword" id="userResetPassword">
      <doc xml:lang="en" title="userResetPassword"/>
      <method name="POST" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request>
          <representation mediaType="application/json"/>
        </request>
        <response status="200">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
        <response status="">
          <representation mediaType="application/json"/>
        </response>
      </method>
    </resource>
    <resource path="user/delete" id="userDelete">
      <doc xml:lang="en" title="userDelete"/>
      <method name="POST" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request>
          <representation mediaType="application/json"/>
        </request>
        <response status="200">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
        <response status="">
          <representation mediaType="application/json"/>
        </response>
      </method>
    </resource>
    <resource path="user/queryAllByPage" id="userQueryAllByPage">
      <doc xml:lang="en" title="userQueryAllByPage"/>
      <method name="POST" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request>
          <representation mediaType="application/json"/>
        </request>
        <response status="200">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
        <response status="">
          <representation mediaType="application/json"/>
        </response>
      </method>
    </resource>
    <resource path="user/get/{id}" id="userGet">
      <doc xml:lang="en" title="userGet"/>
      <param name="id" default="1" type="xs:string" required="false" style="template" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <method name="GET" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request/>
        <response status="200">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
      </method>
    </resource>
    <resource path="user/addRole" id="userAddRole">
      <doc xml:lang="en" title="userAddRole"/>
      <method name="POST" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request>
          <representation mediaType="application/json"/>
        </request>
        <response status="200">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
        <response status="">
          <representation mediaType="application/json"/>
        </response>
      </method>
    </resource>
    <resource path="user/addRoleByMdn" id="userAddRoleByMdn">
      <doc xml:lang="en" title="userAddRoleByMdn"/>
      <method name="POST" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request>
          <representation mediaType="application/json"/>
        </request>
        <response status="">
          <representation mediaType="application/json"/>
        </response>
        <response status="200">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
      </method>
    </resource>
    <resource path="user/delRoleByMdn" id="userDelRoleByMdn">
      <doc xml:lang="en" title="userDelRoleByMdn"/>
      <method name="POST" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request>
          <representation mediaType="application/json"/>
        </request>
        <response status="">
          <representation mediaType="application/json"/>
        </response>
        <response status="200">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
      </method>
    </resource>
    <resource path="user/check" id="userCheck">
      <doc xml:lang="en" title="userCheck"/>
      <method name="POST" id="userCheck">
        <doc xml:lang="en" title="userCheck"/>
        <request>
          <representation mediaType="application/json"/>
        </request>
        <response status="200">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
        <response status="">
          <representation mediaType="application/json"/>
        </response>
        <response status="0">
          <representation mediaType=""/>
        </response>
      </method>
    </resource>
    <resource path="menu/add" id="menuAdd">
      <doc xml:lang="en" title="menuAdd"/>
      <method name="POST" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request>
          <representation mediaType="application/json"/>
        </request>
        <response status="200">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
        <response status="">
          <representation mediaType="application/json"/>
        </response>
      </method>
    </resource>
    <resource path="menu/update" id="menuUpdate">
      <doc xml:lang="en" title="menuUpdate"/>
      <method name="POST" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request/>
      </method>
    </resource>
    <resource path="menu/delete" id="menuDelete">
      <doc xml:lang="en" title="menuDelete"/>
      <method name="POST" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request>
          <representation mediaType="application/json"/>
        </request>
        <response status="200">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
        <response status="">
          <representation mediaType="application/json"/>
        </response>
      </method>
    </resource>
    <resource path="menu/queryMenuRole/{id}" id="menuQueryMenuRole">
      <doc xml:lang="en" title="menuQueryMenuRole"/>
      <param name="id" default="1" type="xs:string" required="false" style="template" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <method name="GET" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request/>
        <response status="404">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
      </method>
    </resource>
    <resource path="menu/query" id="menuQuery">
      <doc xml:lang="en" title="menuQuery"/>
      <method name="POST" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request>
          <representation mediaType="application/json"/>
        </request>
        <response status="">
          <representation mediaType="application/json"/>
        </response>
        <response status="200">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
      </method>
    </resource>
    <resource path="model/queryAll" id="modelQueryAll">
      <doc xml:lang="en" title="modelQueryAll"/>
      <method name="GET" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request/>
        <response status="200">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
      </method>
    </resource>
    <resource path="model/queryByRole/{roleId}" id="modelQueryByRole">
      <doc xml:lang="en" title="modelQueryByRole"/>
      <param name="roleId" default="1" type="xs:string" required="false" style="template" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <method name="GET" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request/>
        <response status="404">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
        <response status="200">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
      </method>
    </resource>
    <resource path="auth/login" id="authLogin">
      <doc xml:lang="en" title="authLogin"/>
      <method name="POST" id="auth/login">
        <doc xml:lang="en" title="auth/login"/>
        <request>
          <representation mediaType="application/json"/>
        </request>
        <response status="200">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
        <response status="">
          <representation mediaType="application/json"/>
        </response>
        <response status="405">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
      </method>
    </resource>
    <resource path="auth/getCaptcha" id="authGetCaptcha">
      <doc xml:lang="en" title="authGetCaptcha"/>
      <method name="POST" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request>
          <representation mediaType="application/json"/>
        </request>
        <response status="200">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
        <response status="">
          <representation mediaType="application/json"/>
        </response>
        <response status="500">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
      </method>
    </resource>
    <resource path="auth/loginApp" id="authLoginApp">
      <doc xml:lang="en" title="authLoginApp"/>
      <method name="POST" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request>
          <representation mediaType="application/json"/>
        </request>
        <response status="200">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
        <response status="">
          <representation mediaType="application/json"/>
        </response>
      </method>
    </resource>
  </resources>
</application>]]></con:content><con:type>http://wadl.dev.java.net/2009/02</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://192.168.12.170:10001</con:endpoint></con:endpoints><con:resource name="orderFirst" path="package/orderFirst"><con:settings/><con:parameters/><con:method name="Method 1" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="order" path="package/order"><con:settings/><con:parameters/><con:method name="Method 1" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="disOrder" path="package/disOrder"><con:settings/><con:parameters/><con:method name="Method 1" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="roleAdd" path="role/add"><con:settings/><con:parameters/><con:method name="Method 1" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="roleUpdate" path="role/update"><con:settings/><con:parameters/><con:method name="Method 1" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="roleDelete" path="role/delete"><con:settings/><con:parameters/><con:method name="Method 1" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="roleQueryAll" path="role/queryAll"><con:settings/><con:parameters/><con:method name="Method 1" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="roleQueryUserRole" path="role/queryUserRole"><con:settings/><con:parameters/><con:method name="Method 1" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="roleGet" path="role/get/{id}"><con:settings/><con:parameters><con:parameter><con:name>id</con:name><con:value>1</con:value><con:style>TEMPLATE</con:style><con:default>1</con:default></con:parameter></con:parameters><con:method name="Method 1" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="userAdd" path="user/add"><con:settings/><con:parameters/><con:method name="Add" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="userUpdatePassword" path="user/updatePassword"><con:settings/><con:parameters/><con:method name="updatePassword" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="userUpdateNickName" path="user/updateNickName"><con:settings/><con:parameters/><con:method name="Method 1" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="userResetPassword" path="user/resetPassword"><con:settings/><con:parameters/><con:method name="Method 1" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="userDelete" path="user/delete"><con:settings/><con:parameters/><con:method name="Method 1" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="userQueryAllByPage" path="user/queryAllByPage"><con:settings/><con:parameters/><con:method name="Method 1" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="userGet" path="user/get/{id}"><con:settings/><con:parameters><con:parameter><con:name>id</con:name><con:value>1</con:value><con:style>TEMPLATE</con:style><con:default>1</con:default></con:parameter></con:parameters><con:method name="Method 1" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="userAddRole" path="user/addRole"><con:settings/><con:parameters/><con:method name="Method 1" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="userAddRoleByMdn" path="user/addRoleByMdn"><con:settings/><con:parameters/><con:method name="Method 1" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="userDelRoleByMdn" path="user/delRoleByMdn"><con:settings/><con:parameters/><con:method name="Method 1" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="userCheck" path="user/check"><con:settings/><con:parameters/><con:method name="userCheck" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="menuAdd" path="menu/add"><con:settings/><con:parameters/><con:method name="Method 1" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="menuUpdate" path="menu/update"><con:settings/><con:parameters/><con:method name="Method 1" method="POST"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="menuDelete" path="menu/delete"><con:settings/><con:parameters/><con:method name="Method 1" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="menuQueryMenuRole" path="menu/queryMenuRole/{id}"><con:settings/><con:parameters><con:parameter><con:name>id</con:name><con:value>1</con:value><con:style>TEMPLATE</con:style><con:default>1</con:default></con:parameter></con:parameters><con:method name="Method 1" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="menuQuery" path="menu/query"><con:settings/><con:parameters/><con:method name="Method 1" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="modelQueryAll" path="model/queryAll"><con:settings/><con:parameters/><con:method name="Method 1" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="modelQueryByRole" path="model/queryByRole/{roleId}"><con:settings/><con:parameters><con:parameter><con:name>roleId</con:name><con:value>1</con:value><con:style>TEMPLATE</con:style><con:default>1</con:default></con:parameter></con:parameters><con:method name="Method 1" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="authLogin" path="auth/login"><con:settings/><con:parameters/><con:method name="auth/login" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="authGetCaptcha" path="auth/getCaptcha"><con:settings/><con:parameters/><con:method name="Method 1" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="authLoginApp" path="auth/loginApp"><con:settings/><con:parameters/><con:method name="Method 1" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Message" type="rest" basePath="" definitionUrl="C:\Users\lizzi\Desktop\Message_1.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/C:/Users/lizzi/Desktop/Message_1.wadl"><con:part><con:url>file:/C:/Users/lizzi/Desktop/Message_1.wadl</con:url><con:content><![CDATA[<application xmlns="http://wadl.dev.java.net/2009/02">
  <doc xml:lang="en" title="Message"/>
  <resources base="http://192.168.12.172:10002">
    <resource path="message/add" id="messageAddLoad">
      <doc xml:lang="en" title="messageAddLoad"/>
      <method name="GET" id="method1">
        <doc xml:lang="en" title="method1"/>
        <request/>
        <response status="405">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
      </method>
    </resource>
    <resource path="message/add" id="messageAdd">
      <doc xml:lang="en" title="messageAdd"/>
      <method name="POST" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request>
          <representation mediaType="application/json"/>
        </request>
        <response status="">
          <representation mediaType="application/json"/>
        </response>
        <response status="400">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
        <response status="200">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
      </method>
    </resource>
    <resource path="message/query" id="smsQueryLoad">
      <doc xml:lang="en" title="smsQueryLoad"/>
      <method name="GET" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request/>
        <response status="400 405">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
        <response status="">
          <representation mediaType="application/json"/>
        </response>
      </method>
    </resource>
    <resource path="message/query" id="smsQuery">
      <doc xml:lang="en" title="smsQuery"/>
      <method name="POST" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request>
          <representation mediaType="application/json"/>
        </request>
        <response status="">
          <representation mediaType="application/json"/>
        </response>
        <response status="400">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
      </method>
      <method name="POST" id="Method 2">
        <doc xml:lang="en" title="Method 2"/>
        <request>
          <representation mediaType="application/json"/>
        </request>
        <response status="">
          <representation mediaType="application/json"/>
        </response>
        <response status="200">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
      </method>
    </resource>
    <resource path="message/get/{messageId}" id="messageGet">
      <doc xml:lang="en" title="messageGet"/>
      <param name="messageId" default="messageId" type="xs:string" required="false" style="template" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <method name="GET" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request/>
        <response status="404">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
      </method>
    </resource>
    <resource path="message/template/add" id="smsAddLoad">
      <doc xml:lang="en" title="smsAddLoad"/>
      <method name="GET" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request/>
        <response status="405">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
      </method>
    </resource>
    <resource path="message/template/add" id="tempAdd">
      <doc xml:lang="en" title="tempAdd"/>
      <method name="POST" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request/>
      </method>
      <method name="POST" id="Method 2">
        <doc xml:lang="en" title="Method 2"/>
        <request>
          <representation mediaType="application/json"/>
        </request>
        <response status="">
          <representation mediaType="application/json"/>
        </response>
        <response status="200">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
        <response status="400">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
      </method>
    </resource>
    <resource path="message/template/delete/{userId}/{msgTemplateId}" id="tempDelte">
      <doc xml:lang="en" title="tempDelte"/>
      <param name="userId" default="userId" type="xs:string" required="false" style="template" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <param name="msgTemplateId" default="msgTemplateId" type="xs:string" required="false" style="template" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <method name="GET" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request/>
        <response status="200">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
      </method>
    </resource>
    <resource path="message/template/update/{msgTemplateId}" id="smsTempUpdateLoad">
      <doc xml:lang="en" title="smsTempUpdateLoad"/>
      <param name="msgTemplateId" default="msgTemplateId" type="xs:string" required="false" style="template" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <method name="GET" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request/>
        <response status="404">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
      </method>
    </resource>
    <resource path="message/template/update" id="smsTempUpdate">
      <doc xml:lang="en" title="smsTempUpdate"/>
      <method name="POST" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request>
          <representation mediaType="application/json"/>
        </request>
        <response status="404">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
        <response status="">
          <representation mediaType="application/json"/>
        </response>
      </method>
    </resource>
    <resource path="message/template/query" id="smsTempQueryLoad">
      <doc xml:lang="en" title="smsTempQueryLoad"/>
      <method name="GET" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request/>
        <response status="405">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
      </method>
    </resource>
    <resource path="message/template/query" id="smsTempQuery">
      <doc xml:lang="en" title="smsTempQuery"/>
      <method name="POST" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request/>
      </method>
      <method name="POST" id="Method 2">
        <doc xml:lang="en" title="Method 2"/>
        <request>
          <representation mediaType="application/json"/>
        </request>
        <response status="200">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
        <response status="">
          <representation mediaType="application/json"/>
        </response>
      </method>
    </resource>
    <resource path="message/template/queryById/{userId}/{entId}/{msgTemplateId}" id="smsTempQueryById">
      <doc xml:lang="en" title="smsTempQueryById"/>
      <param name="userId" default="userId" type="xs:string" required="false" style="template" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <param name="entId" default="entId" type="xs:string" required="false" style="template" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <param name="msgTemplateId" default="msgTemplateId" type="xs:string" required="false" style="template" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <method name="GET" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request/>
        <response status="404">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
      </method>
    </resource>
  </resources>
</application>]]></con:content><con:type>http://wadl.dev.java.net/2009/02</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://192.168.12.172:10002</con:endpoint></con:endpoints><con:resource name="messageAddLoad" path="/message/add"><con:settings/><con:parameters/><con:method name="method1" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request/><con:originalUri>http://192.168.12.170/message/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Method 1" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request>{
"userId":"13145674567",
"entId":2 ,
"entKey":"tb7cdac10d44bec137313968581be5081", 
"content":"大家好",
"receivers":[
	{
	"recName":"张天翼", 
	"terminal":"13322334455"
	}, 
	{
	"recName":"张天翼", 
	"terminal":"18978965342"
	}
]}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="smsQueryLoad" path="/message/query"><con:settings/><con:parameters/><con:method name="Method 1" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>400 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request/><con:originalUri>http://192.168.12.170/message/query</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Method 1-1" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" postQueryString="false"><con:settings/><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Method 2" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" postQueryString="false"><con:settings/><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="messageGet" path="message/get/{messageId}"><con:settings/><con:parameters><con:parameter><con:name>messageId</con:name><con:value>messageId</con:value><con:style>TEMPLATE</con:style><con:default>messageId</con:default></con:parameter></con:parameters><con:method name="Method 1" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="smsAddLoad" path="message/template/add"><con:settings/><con:parameters/><con:method name="Method 1" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:parameters/></con:request></con:method><con:method name="Method 1-1" method="POST"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:parameters/></con:request></con:method><con:method name="Method 2" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="tempDelte" path="message/template/delete/{userId}/{msgTemplateId}"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value>userId</con:value><con:style>TEMPLATE</con:style><con:default>userId</con:default></con:parameter><con:parameter><con:name>msgTemplateId</con:name><con:value>msgTemplateId</con:value><con:style>TEMPLATE</con:style><con:default>msgTemplateId</con:default></con:parameter></con:parameters><con:method name="Method 1" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="smsTempUpdateLoad" path="message/template/update/{msgTemplateId}"><con:settings/><con:parameters><con:parameter><con:name>msgTemplateId</con:name><con:value>msgTemplateId</con:value><con:style>TEMPLATE</con:style><con:default>msgTemplateId</con:default></con:parameter></con:parameters><con:method name="Method 1" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="smsTempUpdate" path="message/template/update"><con:settings/><con:parameters/><con:method name="Method 1" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="smsTempQueryLoad" path="message/template/query"><con:settings/><con:parameters/><con:method name="Method 1" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:parameters/></con:request></con:method><con:method name="Method 1-1" method="POST"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:parameters/></con:request></con:method><con:method name="Method 2" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="smsTempQueryById" path="message/template/queryById/{userId}/{entId}/{msgTemplateId}"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value>userId</con:value><con:style>TEMPLATE</con:style><con:default>userId</con:default></con:parameter><con:parameter><con:name>entId</con:name><con:value>entId</con:value><con:style>TEMPLATE</con:style><con:default>entId</con:default></con:parameter><con:parameter><con:name>msgTemplateId</con:name><con:value>msgTemplateId</con:value><con:style>TEMPLATE</con:style><con:default>msgTemplateId</con:default></con:parameter></con:parameters><con:method name="Method 1" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Basis" type="rest" basePath="" definitionUrl="C:\Users\lizzi\Basis_1.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="Basis.wadl"><con:part><con:url>Basis.wadl</con:url><con:content><![CDATA[<application xmlns="http://wadl.dev.java.net/2009/02">
  <doc xml:lang="en" title="Basis"/>
  <resources base="http://192.168.12.172:10002">
    <resource path="basis/logo/add" id="logoAdd">
      <doc xml:lang="en" title="logoAdd"/>
      <method name="POST" id="Add">
        <doc xml:lang="en" title="Add"/>
        <request/>
      </method>
    </resource>
    <resource path="basis/logo/query/{entId}" id="logoQuery">
      <doc xml:lang="en" title="logoQuery"/>
      <param name="entId" default="123" type="xs:string" required="false" style="template" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <method name="GET" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request/>
        <response status="200">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
      </method>
    </resource>
    <resource path="basis/logo/queryDefault/{entId}/{status}" id="queryDefault">
      <doc xml:lang="en" title="queryDefault"/>
      <param name="entId" default="123" type="xs:string" required="false" style="template" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <param name="status" default="1" type="xs:string" required="false" style="template" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <method name="GET" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request/>
        <response status="404">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
        <response status="200">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
      </method>
    </resource>
    <resource path="basis/theme/add" id="themeAddLoad">
      <doc xml:lang="en" title="themeAddLoad"/>
      <method name="GET" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request/>
      </method>
      <method name="GET" id="Method 1-1">
        <doc xml:lang="en" title="Method 1-1"/>
        <request/>
      </method>
    </resource>
    <resource path="basis/theme/query" id="themeQueryLoad">
      <doc xml:lang="en" title="themeQueryLoad"/>
      <method name="GET" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request/>
      </method>
    </resource>
    <resource path="basis/theme/queryLoginPic/{entId}" id="themeQueryLoginPic">
      <doc xml:lang="en" title="themeQueryLoginPic"/>
      <param name="entId" default="entId" type="xs:string" required="false" style="template" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <method name="GET" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request/>
        <response status="200">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
      </method>
    </resource>
    <resource path="basis/theme/addSkin/{entId}/{colorValue}" id="themeAddSkin">
      <doc xml:lang="en" title="themeAddSkin"/>
      <param name="entId" default="entId" type="xs:string" required="false" style="template" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <param name="colorValue" default="colorValue" type="xs:string" required="false" style="template" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <method name="GET" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request/>
        <response status="400">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
        <response status="200">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
      </method>
    </resource>
    <resource path="basis/theme/getDefaultColor/{entId}" id="themeGetDefaultColor">
      <doc xml:lang="en" title="themeGetDefaultColor"/>
      <param name="entId" default="entId" type="xs:string" required="false" style="template" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <method name="GET" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request/>
        <response status="404">
          <representation mediaType="application/json;charset=UTF-8"/>
        </response>
        <response status="">
          <representation mediaType="application/json"/>
        </response>
      </method>
    </resource>
    <resource path="basis/logo/add" id="logoAddLoad">
      <doc xml:lang="en" title="logoAddLoad"/>
      <method name="GET" id="Add">
        <doc xml:lang="en" title="Add"/>
        <request/>
      </method>
    </resource>
  </resources>
</application>]]></con:content><con:type>http://wadl.dev.java.net/2009/02</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://192.168.12.172:10002</con:endpoint></con:endpoints><con:resource name="logoAdd" path="/basis/logo/add"><con:settings/><con:parameters/><con:method name="Add" method="POST"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request>{"entId":2, "logoUrl ":"http://XXXX" }</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="logoQuery" path="/basis/logo/query/{entId}"><con:settings/><con:parameters><con:parameter><con:name>entId</con:name><con:value>123</con:value><con:style>TEMPLATE</con:style><con:default>123</con:default></con:parameter></con:parameters><con:method name="Method 1" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="queryDefault" path="/basis/logo/queryDefault/{entId}/{status}"><con:settings/><con:parameters><con:parameter><con:name>entId</con:name><con:value>123</con:value><con:style>TEMPLATE</con:style><con:default>123</con:default></con:parameter><con:parameter><con:name>status</con:name><con:value>1</con:value><con:style>TEMPLATE</con:style><con:default>1</con:default></con:parameter></con:parameters><con:method name="Method 1" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="themeAddLoad" path="/basis/theme/add"><con:settings/><con:parameters/><con:method name="Method 1" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Method 1-1" method="POST"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request>{"entId":2, "loginPicUrl ":"http://XXXX" }</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="themeQueryLoad" path="basis/theme/query"><con:settings/><con:parameters/><con:method name="Method 1" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="themeQueryLoginPic" path="/basis/theme/queryLoginPic/{entId}"><con:settings/><con:parameters><con:parameter><con:name>entId</con:name><con:value>entId</con:value><con:style>TEMPLATE</con:style><con:default>entId</con:default></con:parameter></con:parameters><con:method name="Method 1" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="themeAddSkin" path="basis/theme/addSkin/{entId}/{colorValue}"><con:settings/><con:parameters><con:parameter><con:name>entId</con:name><con:value>entId</con:value><con:style>TEMPLATE</con:style><con:default>entId</con:default></con:parameter><con:parameter><con:name>colorValue</con:name><con:value>colorValue</con:value><con:style>TEMPLATE</con:style><con:default>colorValue</con:default></con:parameter></con:parameters><con:method name="Method 1" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="themeGetDefaultColor" path="basis/theme/getDefaultColor/{entId}"><con:settings/><con:parameters><con:parameter><con:name>entId</con:name><con:value>entId</con:value><con:style>TEMPLATE</con:style><con:default>entId</con:default></con:parameter></con:parameters><con:method name="Method 1" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="logoAddLoad" path="/basis/logo/add"><con:settings/><con:parameters/><con:method name="Add" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite name="Main"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getDepartment" searchProperties="true" id="2dd82453-40a2-4919-af6d-98f18a2d070e" disabled="true"><con:settings/><con:testStep type="restrequest" name="getDepartment"><con:settings/><con:config service="COP_Requests" resourcePath="/department/get" methodName="Basis" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getDepartment" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request/><con:originalUri>http://192.168.12.170/basis/department/get</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}


def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-15;i++){
		if(wsdlstring[i..i+3] == "code"){
			if(wsdlstring[i+7..i+11]=="pages"){
				code = wsdlstring[i+7..i+15]
				break
			}else{
					code = wsdlstring[i+7..i+11]
					break
				}
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps["${testcase.name}"].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = "00000"
//def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=1;
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="departmentQuery" searchProperties="true" id="b70fdb92-ab09-4aae-bb71-ca31bd85a1ad"><con:settings/><con:testStep type="datasource" name="DataSource" id="8a3ce352-2128-4354-b8e1-df7da4ee4ee5"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">asdfadf</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">abeddd</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">12312312399</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">9999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_EXIST_ENTERPRISE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">!2#@#</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">nobody</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>entId</con:property><con:property>userId</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="departmentQuery"><con:settings/><con:config service="COP_Requests" resourcePath="/department/query" methodName="Basis" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="departmentQuery" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"userId":${DataSource#userId},
"entId":${DataSource#entId}
}</con:request><con:originalUri>http://192.168.12.170/basis/department/query</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="result" id="b50db9f8-9da6-4592-9166-fc83ea535e61" disabled="true"><con:settings/><con:config><script>//save result to d:\\cop-log.txt
//need to change teststeps name
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def wsdlResponse=testRunner.testCase.testSteps["querydep"].getTestRequest().getResponseContentAsXml()
//com.eviware.soapui.impl.wsdl.teststeps.WsdlDataSourceTestStep
def dataSource=testRunner.testCase.testSteps['DataSource']
def row=dataSource.getCurrentRow()
File log = new File("D:\\cop-log.txt")
log.withWriterAppend( 'GB2312' ){ w->
def line = context.expand( '${DataSource#line}' )
   w&lt;&lt;"****************************Line:"+row+"****************************"+'\n'+wsdlResponse+'\n'
}</script></con:config></con:testStep><con:testStep type="groovy" name="output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-15;i++){
		if(wsdlstring[i..i+3] == "code"){
			if(wsdlstring[i+7..i+11]=="pages"){
				code = wsdlstring[i+7..i+15]
				break
			}else{
					code = wsdlstring[i+7..i+11]
					break
				}
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="de8ca11d-1ec0-4339-a48d-487a4649dabd"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>departmentQuery</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>b50db9f8-9da6-4592-9166-fc83ea535e61</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>de8ca11d-1ec0-4339-a48d-487a4649dabd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="queryWithEmp" searchProperties="true" id="f479243d-df75-42a5-9f99-37886fcf9f58"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">asdfadf</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">abeddd</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1231231231231231231111111111111111111111111111111111111111111111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1231231231231231231111111111111111111111111111111111111111111111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_EXIST_ENTERPRISE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">!2#@#</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">!@#$%</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">222</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>entId</con:property><con:property>userId</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="queryWithEmp"><con:settings/><con:config service="COP_Requests" resourcePath="/department/queryWithEmp" methodName="Basis" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="queryWithEmp" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"userId":${DataSource#userId},
"entId":${DataSource#entId}
}</con:request><con:originalUri>http://192.168.12.170/basis/department/queryWithEmp</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>ip</con:entry><con:entry>port</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="result" disabled="true"><con:settings/><con:config><script>//save result to d:\\cop-log.txt
//need to change teststeps name
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def wsdlResponse=testRunner.testCase.testSteps["queryWithEmp"].getTestRequest().getResponseContentAsXml()
def dataSource=testRunner.testCase.testSteps['DataSource']
//com.eviware.soapui.impl.wsdl.teststeps.WsdlDataSourceTestStep
def row=dataSource.getCurrentRow()
File log = new File("D:\\cop-log.txt")
log.withWriterAppend( 'GB2312' ){ w->
def line = context.expand( '${DataSource#line}' )
   w&lt;&lt;"****************************Line:"+row+"****************************"+'\n'+wsdlResponse+'\n'
}</script></con:config></con:testStep><con:testStep type="groovy" name="output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-15;i++){
		if(wsdlstring[i..i+3] == "code"){
			if(wsdlstring[i+7..i+11]=="pages"){
				code = wsdlstring[i+7..i+15]
				break
			}else{
					code = wsdlstring[i+7..i+11]
					break
				}
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="ad657192-1cda-4f51-8473-c81421100ee4"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>queryWithEmp</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>5f371d3e-2460-48d5-8324-5960501cd395</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="queryWithEmpApp" searchProperties="true" id="5d330b10-5655-4d9d-9489-8dfd1bd71bb6"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">asdfadf</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">abeddd</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1231231231231231231111111111111111111111111111111111111111111111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1231231231231231231111111111111111111111111111111111111111111111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_EXIST_ENTERPRISE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">!2#@#</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">!@#$%</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">222</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>entId</con:property><con:property>userId</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="queryWithEmpApp"><con:settings/><con:config service="COP_Requests" resourcePath="/department/queryWithEmpApp" methodName="Basis" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="queryWithEmpApp" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"userId":${DataSource#userId},
"entId":${DataSource#entId}
}</con:request><con:originalUri>http://192.168.12.170/basis/department/queryWithEmpApp</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>ip</con:entry><con:entry>port</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="result" disabled="true"><con:settings/><con:config><script>//save result to d:\\cop-log.txt
//need to change teststeps name
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def wsdlResponse=testRunner.testCase.testSteps["queryWithEmpApp"].getTestRequest().getResponseContentAsXml()
//com.eviware.soapui.impl.wsdl.teststeps.WsdlDataSourceTestStep
def dataSource=testRunner.testCase.testSteps['DataSource']
def row=dataSource.getCurrentRow()
File log = new File("D:\\cop-log.txt")
log.withWriterAppend( 'GB2312' ){ w->
def line = context.expand( '${DataSource#line}' )
   w&lt;&lt;"****************************Line:"+row+"****************************"+'\n'+wsdlResponse+'\n'
}
</script></con:config></con:testStep><con:testStep type="groovy" name="output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-15;i++){
		if(wsdlstring[i..i+3] == "code"){
			if(wsdlstring[i+7..i+11]=="pages"){
				code = wsdlstring[i+7..i+15]
				break
			}else{
					code = wsdlstring[i+7..i+11]
					break
				}
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="5f371d3e-2460-48d5-8324-5960501cd395"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>queryWithEmpApp</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>ad657192-1cda-4f51-8473-c81421100ee4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="departmentGet" searchProperties="true" id="9cb05a38-9239-4a4a-97f3-dec131e4b68b"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">3</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">asdfadf</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1234599999999999999999999999999999999999999999999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">￥%……%@#</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1234</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00200</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>depId</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="departmentGet" id="b06a66bb-8491-4c2f-813f-e9156fb300d2"><con:settings/><con:config service="COP_Requests" resourcePath="/department/get" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="departmentGet" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"depId":${DataSource#depId}
}</con:request><con:originalUri>http://192.168.12.170/basis/department/get</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="result" disabled="true"><con:settings/><con:config><script>//save result to d:\\cop-log.txt
//need to change teststeps name
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def wsdlResponse=testRunner.testCase.testSteps["departmentGet"].getTestRequest().getResponseContentAsXml()
//com.eviware.soapui.impl.wsdl.teststeps.WsdlDataSourceTestStep
def dataSource=testRunner.testCase.testSteps['DataSource']
def row=dataSource.getCurrentRow()
File log = new File("D:\\cop-departmentGet-log.txt")
log.withWriterAppend( 'GB2312' ){ w->
def line = context.expand( '${DataSource#line}' )
   w&lt;&lt;"****************************Line:"+row+"****************************"+'\n'+wsdlResponse+'\n'
}</script></con:config></con:testStep><con:testStep type="groovy" name="output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-15;i++){
		if(wsdlstring[i..i+3] == "code"){
			if(wsdlstring[i+7..i+11]=="pages"){
				code = wsdlstring[i+7..i+15]
				break
			}else{
					code = wsdlstring[i+7..i+11]
					break
				}
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="e7a82b6a-5058-42d6-ab7a-974669ac8368"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>departmentGet</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>b06a66bb-8491-4c2f-813f-e9156fb300d2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e7a82b6a-5058-42d6-ab7a-974669ac8368</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="departmentAdd" searchProperties="true" id="ca632a83-1716-4c0b-a656-cd48f3eb5d42"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">测试部门添加1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">测试部门添加</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">测试部门添加2</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">测试部门添加3</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">测试部门添加4</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">abc</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">测试部门添加5</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">abc</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">测试部门添加6</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">a</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">测试部门添加7777777777777777777777777777777777777777777777777777777777777777777777777777777777</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">测试部门添加8</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">测试部门添加9</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">测试部门添加10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">99999999999999999999999999999999999999999999999999999999999999999999999999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">测试部门添加12￥%……&amp;%*&amp;&amp;*$^@</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00011</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">测试部门添加13</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">-123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">测试部门添加14</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">-7</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">测试部门添加1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>name</con:property><con:property>parentId</con:property><con:property>entId</con:property><con:property>cpsFlag</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="departmentAdd"><con:settings/><con:config service="COP_Requests" resourcePath="/department/add" methodName="Basis" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="departmentAdd" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"name":"${DataSource#name}",
"parentId":${DataSource#parentId},
"entId":${DataSource#entId},
"cpsFlag":${DataSource#cpsFlag}
}</con:request><con:originalUri>http://192.168.12.170/basis/department/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="result" disabled="true"><con:settings/><con:config><script>//save result to d:\\cop-log.txt
//need to change teststeps name
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def wsdlResponse=testRunner.testCase.testSteps["departmentAdd"].getTestRequest().getResponseContentAsXml()
//com.eviware.soapui.impl.wsdl.teststeps.WsdlDataSourceTestStep
def dataSource=testRunner.testCase.testSteps['DataSource']
def row=dataSource.getCurrentRow()
File log = new File("D:\\cop-departmentAdd-log.txt")
log.withWriterAppend( 'GB2312' ){ w->
def line = context.expand( '${DataSource#line}' )
   w&lt;&lt;"****************************Line:"+row+"****************************"+'\n'+wsdlResponse+'\n'
}</script></con:config></con:testStep><con:testStep type="groovy" name="output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-15;i++){
		if(wsdlstring[i..i+3] == "code"){
			if(wsdlstring[i+7..i+11]=="pages"){
				code = wsdlstring[i+7..i+15]
				break
			}else{
					code = wsdlstring[i+7..i+11]
					break
				}
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="b4bf4329-f558-4ca8-8a9e-12720031742b"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>departmentAdd</targetStep></con:config></con:testStep><con:setupScript>import groovy.sql.Sql;
try{
	def DBProperties = testRunner.testCase.getTestSuite();
	def sql = Sql.newInstance(DBProperties.getPropertyValue("DB_Connection_URL"),DBProperties.getPropertyValue( "DB_loginname"),DBProperties.getPropertyValue( "DB_Password"),DBProperties.getPropertyValue( "DB_Driver_Class"));
	def deldep = sql.rows("delete from public.group where name like '测试部门添加%'")
}catch(Exception e){
	e.printStackTrace();
}
finally{
	try{ sql.close();}catch(Exception e){log.info(e);log.info("finally");}
}</con:setupScript><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>b4bf4329-f558-4ca8-8a9e-12720031742b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="departmentDelete" searchProperties="true" id="4b8d093c-c6c6-45cc-923f-b42d8c93eef9"><con:settings/><con:testStep type="datasource" name="DataSource" id="a8e8c822-41e2-4cdd-9525-5d6afe11d961"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">63</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">63</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">abc</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">99999999999999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">63</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">77777777777777777777</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">63</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">add</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>depId</con:property><con:property>cpsFlag</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="departmentDelete"><con:settings/><con:config service="COP_Requests" resourcePath="/department/delete" methodName="Basis" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="departmentDelete" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"depId":${DataSource#depId},
"cpsFlag":${DataSource#cpsFlag}
}</con:request><con:originalUri>http://192.168.12.170/basis/department/delete</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="result" disabled="true"><con:settings/><con:config><script>//save result to d:\\cop-log.txt
//need to change teststeps name
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def wsdlResponse=testRunner.testCase.testSteps["departmentDelete"].getTestRequest().getResponseContentAsXml()
//com.eviware.soapui.impl.wsdl.teststeps.WsdlDataSourceTestStep
def dataSource=testRunner.testCase.testSteps['DataSource']
def row=dataSource.getCurrentRow()
File log = new File("D:\\cop-departmentDelete-log.txt")
log.withWriterAppend( 'GB2312' ){ w->
def line = context.expand( '${DataSource#line}' )
   w&lt;&lt;"****************************Line:"+row+"****************************"+'\n'+wsdlResponse+'\n'
}</script></con:config></con:testStep><con:testStep type="groovy" name="output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-15;i++){
		if(wsdlstring[i..i+3] == "code"){
			if(wsdlstring[i+7..i+11]=="pages"){
				code = wsdlstring[i+7..i+15]
				break
			}else{
					code = wsdlstring[i+7..i+11]
					break
				}
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="91174224-fea3-4c95-b33d-0bd6a7aab87b"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>departmentDelete</targetStep></con:config></con:testStep><con:setupScript>import groovy.sql.Sql;
try{
	def DBProperties = testRunner.testCase.getTestSuite();
	def sql = Sql.newInstance(DBProperties.getPropertyValue("DB_Connection_URL"),DBProperties.getPropertyValue("DB_loginname"),DBProperties.getPropertyValue("DB_Password"),DBProperties.getPropertyValue("DB_Driver_Class"));
	def updatedel = sql.rows("update public.group set status = '1' where id = '63'")
}catch(Exception e){
	e.printStackTrace();
}
finally{
	try{ sql.close();log.info("close");}catch(Exception e){log.info("Final:"+e);}
}</con:setupScript><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>a8e8c822-41e2-4cdd-9525-5d6afe11d961</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>91174224-fea3-4c95-b33d-0bd6a7aab87b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="departmentUpdate" searchProperties="true" id="4c3a4efa-59e9-4230-8596-0ace9a5403df"><con:settings/><con:testStep type="datasource" name="DataSource" id="080b4610-abf9-439e-9eae-c44ee02c148f"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">政企部7777</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">3</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">8</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">8</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">政企部111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">8</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">政企部3</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">政企部3</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">8</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">政企部4</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">abc</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">8</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">政企部5</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">abc</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">政企部6</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">a</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">8</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">政企部7777777777777777777777777777777777777777777777777777777777777777777777777777777777</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">8</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">政企部8</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">8</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">政企部9</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">政企部10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">99999999999999999999999999999999999999999999999999999999999999999999999999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">8</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">政企部!@#$%&amp;*()</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">8</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00011</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">政企部13</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">-123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">8</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">政企部15</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">8</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">政企部16</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">-7</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">政企部17</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">998</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">政企部14</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">776</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">8</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">没事干的</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">8</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00102</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">未命名</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">8</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>name</con:property><con:property>parentId</con:property><con:property>cpsFlag</con:property><con:property>depId</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="departmentUpdate"><con:settings/><con:config service="COP_Requests" resourcePath="/department/update" methodName="Basis" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="departmentUpdate" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"depId":${DataSource#depId},
"name":"${DataSource#name}",
"parentId":${DataSource#parentId},
"cpsFlag":${DataSource#cpsFlag}
}</con:request><con:originalUri>http://192.168.12.170/basis/department/update</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="result" disabled="true"><con:settings/><con:config><script>//save result to d:\\cop-log.txt
//need to change teststeps name
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def wsdlResponse=testRunner.testCase.testSteps["departmentUpdate"].getTestRequest().getResponseContentAsXml()
//com.eviware.soapui.impl.wsdl.teststeps.WsdlDataSourceTestStep
def dataSource=testRunner.testCase.testSteps['DataSource']
def row=dataSource.getCurrentRow()
File log = new File("D:\\cop-departmentUpdate-log.txt")
log.withWriterAppend( 'GB2312' ){ w->
def line = context.expand( '${DataSource#line}' )
   w&lt;&lt;"****************************Line:"+row+"****************************"+'\n'+wsdlResponse+'\n'
}</script></con:config></con:testStep><con:testStep type="groovy" name="output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-15;i++){
		if(wsdlstring[i..i+3] == "code"){
			if(wsdlstring[i+7..i+11]=="pages"){
				code = wsdlstring[i+7..i+15]
				break
			}else{
					code = wsdlstring[i+7..i+11]
					break
				}
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="470b5967-de03-462d-bb94-b25f162cebff"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>departmentUpdate</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>080b4610-abf9-439e-9eae-c44ee02c148f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>470b5967-de03-462d-bb94-b25f162cebff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="queryEmp" searchProperties="true" id="108fc06d-4b94-4181-86c3-d51a6b63581d"><con:settings/><con:testStep type="datasource" name="DataSource" id="b26fca49-c5cd-46f1-89cb-95dea9db9ea3"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">2</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">abc</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">999999999999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#DEP_ID_ERROR}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">775</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#DEP_ID_ERROR}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-22</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00006</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">!@#$%^</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>depId</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="queryEmp"><con:settings/><con:config service="COP_Requests" resourcePath="/department/queryEmp" methodName="Basis" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="queryEmp" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"depId":${DataSource#depId}
}</con:request><con:originalUri>http://192.168.12.170/basis/department/queryEmp</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="result" disabled="true"><con:settings/><con:config><script>//save result to d:\\cop-log.txt
//need to change teststeps name
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def wsdlResponse=testRunner.testCase.testSteps["queryEmp"].getTestRequest().getResponseContentAsXml()
//com.eviware.soapui.impl.wsdl.teststeps.WsdlDataSourceTestStep
def dataSource=testRunner.testCase.testSteps['DataSource']
def row=dataSource.getCurrentRow()
File log = new File("D:\\cop-queryEmp-log.txt")
log.withWriterAppend( 'GB2312' ){ w->
def line = context.expand( '${DataSource#line}' )
   w&lt;&lt;"****************************Line:"+row+"****************************"+'\n'+wsdlResponse+'\n'
}</script></con:config></con:testStep><con:testStep type="groovy" name="output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-15;i++){
		if(wsdlstring[i..i+3] == "code"){
			if(wsdlstring[i+7..i+11]=="pages"){
				code = wsdlstring[i+7..i+15]
				break
			}else{
					code = wsdlstring[i+7..i+11]
					break
				}
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="bb120d04-6adc-4637-95e2-4511a79a880d"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>queryEmp</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>b26fca49-c5cd-46f1-89cb-95dea9db9ea3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bb120d04-6adc-4637-95e2-4511a79a880d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="addEmp" searchProperties="true" id="eaf8a32f-681b-4b80-ba63-0144ee1c5e68"><con:settings/><con:testStep type="datasource" name="DataSource" id="ce5a919c-dd39-4ad2-94c2-52f4aa20f5c3"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">11</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[8,9,10]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[8,9,10]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">11</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">11</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[8,9,10]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">abc</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[8,9,10]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">11</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">8,9,10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">11</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[8,9,10]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">aaaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">99999999999999999999999999999999999999999999999999999999999999999999999999999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[11]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">11</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[999999999999999]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">11</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[12]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1111111111111111111111111111111111111111111111111111111111111111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-11</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[13]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">11</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[-8,-9,-10]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">11</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[14]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">-11</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">11</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[0]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">993</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[8,9,10,11,12,13,14,15,16,17]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">11</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[15]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">0</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">!@#$</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[15]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">11</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[#$%^&amp;]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">11</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[16]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">!@#$%^</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>depId</con:property><con:property>empIds</con:property><con:property>cpsFlag</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="addEmp"><con:settings/><con:config service="COP_Requests" resourcePath="/department/addEmp" methodName="Basis" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="addEmp" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"depId":${DataSource#depId},
"empIds":${DataSource#empIds},
"cpsFlag":${DataSource#cpsFlag}
}</con:request><con:originalUri>http://192.168.12.170/basis/department/addEmp</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="result" disabled="true"><con:settings/><con:config><script>//save result to d:\\cop-log.txt
//need to change teststeps name
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def wsdlResponse=testRunner.testCase.testSteps["addEmp"].getTestRequest().getResponseContentAsXml()
//com.eviware.soapui.impl.wsdl.teststeps.WsdlDataSourceTestStep
def dataSource=testRunner.testCase.testSteps['DataSource']
def row=dataSource.getCurrentRow()
File log = new File("D:\\cop-addEmp-log.txt")
log.withWriterAppend( 'GB2312' ){ w->
def line = context.expand( '${DataSource#line}' )
   w&lt;&lt;"****************************Line:"+row+"****************************"+'\n'+wsdlResponse+'\n'
}</script></con:config></con:testStep><con:testStep type="groovy" name="output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-15;i++){
		if(wsdlstring[i..i+3] == "code"){
			if(wsdlstring[i+7..i+11]=="pages"){
				code = wsdlstring[i+7..i+15]
				break
			}else{
					code = wsdlstring[i+7..i+11]
					break
				}
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="e1878e45-f1b0-4ffe-8616-b19affeb8b87"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>addEmp</targetStep></con:config></con:testStep><con:setupScript>import groovy.sql.Sql;
try{
	def DBProperties = testRunner.testCase.getTestSuite();
	def sql = Sql.newInstance(DBProperties.getPropertyValue("DB_Connection_URL"),DBProperties.getPropertyValue("DB_loginname"),DBProperties.getPropertyValue("DB_Password"),DBProperties.getPropertyValue("DB_Driver_Class"));
	def updatedel = sql.rows("delete from public.r_group_terminal where group_id = '11'")
}catch(Exception e){
	e.printStackTrace();
}
finally{
	try{ sql.close();log.info("close");}catch(Exception e){log.info("Final:"+e);}
}</con:setupScript><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>ce5a919c-dd39-4ad2-94c2-52f4aa20f5c3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e1878e45-f1b0-4ffe-8616-b19affeb8b87</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="empTop" searchProperties="true" id="55114df0-c95c-4ad7-aeb3-29c9f5ef62ff"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">99</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">8</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">00002</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">11</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">00002</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">9</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00002</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">aaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">9</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">11</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">aaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">11111111111111111111111111111111111111111111111111111111111111111111111111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">9</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">11</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">9999999999999999999999999999999999999999999999999999999999999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-11</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">9</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">11</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">-9</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">2222</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">9</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#DEP_ID_ERROR}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">11</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">772</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#EMP_ID_ERROR}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">!@#$^</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">9</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">11</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">!@#$^</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>depId</con:property><con:property>empId</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="empTop" id="11c2af2a-9ef5-4481-9c7a-6951e60474ba"><con:settings/><con:config service="COP_Requests" resourcePath="/department/empTop/{depId}/{empId}" methodName="Basis" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="empTop" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"depId":123,
"empId":123
}</con:request><con:originalUri>http://192.168.12.170/basis/department/empTop/1/2</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="empId" value="${DataSource#empId}"/>
  <con:entry key="depId" value="${DataSource#depId}"/>
</con:parameters><con:parameterOrder><con:entry>depId</con:entry><con:entry>empId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="result" disabled="true"><con:settings/><con:config><script>//save result to d:\\cop-log.txt
//need to change teststeps name
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def wsdlResponse=testRunner.testCase.testSteps["empTop"].getTestRequest().getResponseContentAsString()
//com.eviware.soapui.impl.wsdl.teststeps.WsdlDataSourceTestStep
def dataSource=testRunner.testCase.testSteps['DataSource']
def row=dataSource.getCurrentRow()
def selectedrow=dataSource.toString()
File log = new File("D:\\cop-empTop-log.txt")
log.withWriterAppend( 'GB2312' ){ w->
def line = context.expand( '${DataSource#line}' )
   w&lt;&lt;"****************************Line:"+row+selectedrow+"****************************"+'\n'+wsdlResponse+'\n'
}</script></con:config></con:testStep><con:testStep type="groovy" name="output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-15;i++){
		if(wsdlstring[i..i+3] == "code"){
			if(wsdlstring[i+7..i+11]=="pages"){
				code = wsdlstring[i+7..i+15]
				break
			}else{
					code = wsdlstring[i+7..i+11]
					break
				}
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="93749999-69c7-49d4-a52b-54ed1b386d40"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>empTop</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>ce5a919c-dd39-4ad2-94c2-52f4aa20f5c3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>11c2af2a-9ef5-4481-9c7a-6951e60474ba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>93749999-69c7-49d4-a52b-54ed1b386d40</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="delEmp" searchProperties="true" id="59edeec6-71e6-4514-a3fb-2002a51dd449"><con:settings/><con:testStep type="datasource" name="DataSource" id="b8ab57ad-6dc0-4d72-a1f6-7eae9a2ddea2"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">11</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[8,9]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[13,14]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">11</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">11</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[15]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">abc</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[15]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">11</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">15,16,17</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">11</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[15]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">aaaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">99999999999999999999999999999999999999999999999999999999999999999999999999999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[15]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">11</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[999999999999999]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">11</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[15]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1111111111111111111111111111111111111111111111111111111111111111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-11</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[8,9]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">11</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[-8,-9,-10]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">11</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[10]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">-11</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">11</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[1,2,3]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">772223</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[1,2,3]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">11</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[11]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">0</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">!@#$%</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[12]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">11</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[!@#$%]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>depId</con:property><con:property>empIds</con:property><con:property>cpsFlag</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="delEmp"><con:settings/><con:config service="COP_Requests" resourcePath="/department/delEmp" methodName="Basis" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="delEmp" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"depId":${DataSource#depId},
"empIds":${DataSource#empIds},
"cpsFlag":${DataSource#cpsFlag}
}</con:request><con:originalUri>http://192.168.12.170/basis/department/delEmp</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="result" disabled="true"><con:settings/><con:config><script>//save result to d:\\cop-log.txt
//need to change teststeps name
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def wsdlResponse=testRunner.testCase.testSteps["delEmp"].getTestRequest().getResponseContentAsXml()
//com.eviware.soapui.impl.wsdl.teststeps.WsdlDataSourceTestStep
def dataSource=testRunner.testCase.testSteps['DataSource']
def row=dataSource.getCurrentRow()
File log = new File("D:\\cop-delEmp-log.txt")
log.withWriterAppend( 'GB2312' ){ w->
def line = context.expand( '${DataSource#line}' )
   w&lt;&lt;"****************************Line:"+row+"****************************"+'\n'+wsdlResponse+'\n'
}</script></con:config></con:testStep><con:testStep type="groovy" name="output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-15;i++){
		if(wsdlstring[i..i+3] == "code"){
			if(wsdlstring[i+7..i+11]=="pages"){
				code = wsdlstring[i+7..i+15]
				break
			}else{
					code = wsdlstring[i+7..i+11]
					break
				}
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="e6bcee1d-295d-428d-b1d5-c627f67e495f"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>delEmp</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>ce5a919c-dd39-4ad2-94c2-52f4aa20f5c3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b8ab57ad-6dc0-4d72-a1f6-7eae9a2ddea2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6bcee1d-295d-428d-b1d5-c627f67e495f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="departmentTop" searchProperties="true" id="9ccd3202-fee7-4a7b-b30a-abd5611387ba"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">4</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row>&lt;xml-fragment>&lt;con:entry xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">00002&lt;/con:entry>&lt;/xml-fragment></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">aaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">666666666666666666666666666666666666666666666666666666666666666666666666666666666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">9942232</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#DEP_ID_ERROR}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-11</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">666!@#$</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">3</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>depId</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="departmentTop"><con:settings/><con:config service="COP_Requests" resourcePath="/department/top/{depId}" methodName="Basis" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="departmentTop" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"depId":${DataSource#depId}
}</con:request><con:originalUri>http://192.168.12.170/basis/department/top/123</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="depId" value="${DataSource#depId}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>depId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="result" disabled="true"><con:settings/><con:config><script>//save result to d:\\cop-log.txt
//need to change teststeps name
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def wsdlResponse=testRunner.testCase.testSteps["departmentTop"].getTestRequest().getResponseContentAsXml()
//com.eviware.soapui.impl.wsdl.teststeps.WsdlDataSourceTestStep
def dataSource=testRunner.testCase.testSteps['DataSource']
def row=dataSource.getCurrentRow()
File log = new File("D:\\cop-departmentTop-log.txt")
log.withWriterAppend( 'GB2312' ){ w->
def line = context.expand( '${DataSource#line}' )
   w&lt;&lt;"****************************Line:"+row+"****************************"+'\n'+wsdlResponse+'\n'
}</script></con:config></con:testStep><con:testStep type="groovy" name="output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-15;i++){
		if(wsdlstring[i..i+3] == "code"){
			if(wsdlstring[i+7..i+11]=="pages"){
				code = wsdlstring[i+7..i+15]
				break
			}else{
					code = wsdlstring[i+7..i+11]
					break
				}
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="be0ea6f6-a713-43de-bdd7-3ae248e06cf0"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>departmentTop</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>b26fca49-c5cd-46f1-89cb-95dea9db9ea3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>be0ea6f6-a713-43de-bdd7-3ae248e06cf0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="employeeGet" searchProperties="true" id="607dff14-770d-4a3e-a329-45230c0665fa" disabled="true"><con:settings/><con:testStep type="restrequest" name="employeeGet"><con:settings/><con:config service="COP_Requests" resourcePath="/employee/get" methodName="Basis" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="employeeGet" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request/><con:originalUri>http://192.168.12.170/basis/employee/get</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}


def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-15;i++){
		if(wsdlstring[i..i+3] == "code"){
			if(wsdlstring[i+7..i+11]=="pages"){
				code = wsdlstring[i+7..i+15]
				break
			}else{
					code = wsdlstring[i+7..i+11]
					break
				}
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps["${testcase.name}"].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = "00000"
//def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=1;
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="employeeQuery" searchProperties="true" id="aef279a3-8935-45b8-a543-4e972f729724"><con:settings/><con:testStep type="datasource" name="DataSource" id="6723ac76-2e2c-467e-b7b0-cf1e758fa9d8"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">老一</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">13911604453</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">3</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">老一</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">13911604453</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">老一</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">13911604453</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">3</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">13911604453</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">老一</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">老一</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">13911604453</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">老一</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">13911604453</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1aaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">老一</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">13911604453</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">10aaaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">老一</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">13911604453</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">老一</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">呵呵</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">老一</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">13911604453</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123aadsa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">老一</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">13911604453</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">asdf</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">100</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">老一</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">13911604453</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00200</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">99999999999999999999999999999999999999999999999999999999999999999999999999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">老一</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">13911604453</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">老一老一老一老一老一老一老一老一老一老一老一老一老一老一老一老一老一老一老一老一老一老一老一老一老一老一老一老一老一老一老一老一老一老一老一老一</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">13911604453</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">老一</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1391160</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">老一</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">13911604453</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123999999999999999999999999999999999999999999999999999999999999999999999999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">老一</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">13911604453</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">111999999999999999999999999999999999999999999777777777777777777777777777777777777777777777777799999999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">老一</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">13911604453</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00006</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">-10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">老一</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">13911604453</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00006</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">老一22#412%*&amp;*</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">13911604453</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">老一</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">-18011111111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">老一</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">13911604453</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">-123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00200</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">老一</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">13911604453</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">-111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>currPage</con:property><con:property>recNumPerPage</con:property><con:property>name</con:property><con:property>mdn</con:property><con:property>entId</con:property><con:property>userId</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="employeeQuery"><con:settings/><con:config service="COP_Requests" resourcePath="/employee/query" methodName="Basis" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="employeeQuery" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"currPage":${DataSource#currPage},
"recNumPerPage":${DataSource#recNumPerPage},
"name":${DataSource#name},
"mdn":${DataSource#mdn},
"entId":${DataSource#entId},
"userId":${DataSource#userId}
}</con:request><con:originalUri>http://192.168.12.170/basis/employee/query</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="result" disabled="true"><con:settings/><con:config><script>//save result to d:\\cop-log.txt
//need to change teststep's name
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def wsdlResponse=testRunner.testCase.testSteps["employeeQuery"].getTestRequest().getResponseContentAsXml()
//com.eviware.soapui.impl.wsdl.teststeps.WsdlDataSourceTestStep
def dataSource=testRunner.testCase.testSteps['DataSource']
def row=dataSource.getCurrentRow()
File log = new File("D:\\cop-employeeQuery-log.txt")
log.withWriterAppend( 'GB2312' ){ w->
def line = context.expand( '${DataSource#line}' )
   w&lt;&lt;"****************************Line:"+row+"****************************"+'\n'+wsdlResponse+'\n'
}</script></con:config></con:testStep><con:testStep type="groovy" name="output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-15;i++){
		if(wsdlstring[i..i+3] == "code"){
			if(wsdlstring[i+7..i+11]=="pages"){
				code = wsdlstring[i+7..i+15]
				break
			}else{
					code = wsdlstring[i+7..i+11]
					break
				}
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="e92eecc2-5d72-4e16-b45b-8e02ddbec92a"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>employeeQuery</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>6723ac76-2e2c-467e-b7b0-cf1e758fa9d8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e92eecc2-5d72-4e16-b45b-8e02ddbec92a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="employeeAdd" searchProperties="true" id="4b337415-aab6-4054-b2e8-bdd957c824ab"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">18100000000</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">一个专家</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">Employee18100000000</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123456</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">一个专家</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">Employee18100000021</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123456</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">18100000001</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">一个专家</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">Employee18100000001</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123456</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">18100000002</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">一个专家</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">Employee18100000002</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123456</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">18100000003</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">一个专家</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">Employee18100000003</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123456</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">18100000004</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">一个专家</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">Employee18100000004</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123456</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">18100000005</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">Employee18100000005</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123456</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">abskldfjl</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">一个专家</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">Employee18100000099</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123456</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">18100000006</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">aklds</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">一个专家</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">Employee18100000006</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123456</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">18100000007</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1ad</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">一个专家</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">Employee18100000007</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123456</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">18100000008</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试!@#$%^&amp;*()</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">一个专家</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">Employee18100000008</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123456</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">18100000009</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">abc</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">一个专家</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">Employee18100000009</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123456</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">18100000010</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">一个专家syof卡；&amp;*（&amp;*&amp;</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00011</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">Employee18100000010</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123456</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">18100000011181000000111810000001118100000011</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">一个专家</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">Employee18100000011x</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123456</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">18100000011</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1231234567890123456789012345678901234</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">一个专家</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">Employee18100000011</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123456</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">18100000012</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1231234567890123456789012345678901234</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">一个专家</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">Employee18100000012</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123456</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">181000000013</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试1231234567890123456789012345678901234123123456789012345678901234567890123412312345678901234567890123456789012341231234567890123456789012345678901234123123456789012345678901234567890123412312345678901234567890123456789012341231234567890123456789012345678901234 </con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">一个专家</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">Employee181000$00013</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123456</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">181000000014</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1231234567890123456789012345678901234</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">一个专家</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">Employee18100000014</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123456</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">181000000013</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">一个专家12一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家123131一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231一个专家1231</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">Employee18100000013</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123456</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-18100000016</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">一个专家</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">Employee18100000016</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123456</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">18100000017</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">-123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">一个专家</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">Employee18100000017</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123456</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">18100000018</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">一个专家</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">Employee18100000018</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123456</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">18100000019</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">一个专家</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">Employee18100000019</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123456</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">18100000020</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">12</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">一个专家</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">Employee18100000020</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123456</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">18100000000</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试2</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">一个专家2</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">Employee18100000000</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123456</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>mdn</con:property><con:property>entId</con:property><con:property>depId</con:property><con:property>name</con:property><con:property>gender</con:property><con:property>remark</con:property><con:property>expectedcode</con:property><con:property>username</con:property><con:property>password</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="employeeAdd"><con:settings/><con:config service="COP_Requests" resourcePath="/employee/add" methodName="Basis" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="employeeAdd" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"mdn":${DataSource#mdn},
"entId":${DataSource#entId},
"depId":${DataSource#depId},
"name":${DataSource#name},
"gender":${DataSource#gender},
"remark":${DataSource#remark},
"userName":${DataSource#username},
"passWord":${DataSource#password}
}</con:request><con:originalUri>http://192.168.12.170/basis/employee/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="test" disabled="true"><con:settings/><con:config><script>import groovy.sql.Sql;
try{
	def DBProperties = testRunner.testCase.getTestSuite();
	def sql = Sql.newInstance(DBProperties.getPropertyValue("DB_Connection_URL"),DBProperties.getPropertyValue("DB_loginname"),DBProperties.getPropertyValue("DB_Password"),DBProperties.getPropertyValue("DB_Driver_Class"));
	try{
	def addtemp = sql.rows("insert into public.sms_temp values ('38','消息模板：你好',9999,'2017-03-16 15:00:52.858','1','1')")

	}catch(Exception e){
		log.info("add temp")
	}
	t
	log.info("add temp done")
}catch(Exception e){
	e.printStackTrace();
}

finally{
	try{ sql.close();log.info("close");}catch(Exception e){log.info("Final:"+e);}
}
</script></con:config></con:testStep><con:testStep type="groovy" name="output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-15;i++){
		if(wsdlstring[i..i+3] == "code"){
			if(wsdlstring[i+7..i+11]=="pages"){
				code = wsdlstring[i+7..i+15]
				break
			}else{
					code = wsdlstring[i+7..i+11]
					break
				}
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="560d5930-5dce-417a-ac3f-79f13964fd9c"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>employeeAdd</targetStep></con:config></con:testStep><con:setupScript>import groovy.sql.Sql;
try{
	def DBProperties = testRunner.testCase.getTestSuite();
	def sql = Sql.newInstance(DBProperties.getPropertyValue("DB_Connection_URL"),DBProperties.getPropertyValue("DB_loginname"),DBProperties.getPropertyValue("DB_Password"),DBProperties.getPropertyValue("DB_Driver_Class"));
	try{
	def delemp = sql.rows("delete from public.employee where mdn  like '181000000%'")

	}catch(Exception e){
		log.info("del  emp")
	}
	try{

	def delterminal = sql.rows("delete from public.terminal where mdn  like '181000000%'")

	}catch(Exception e){
		log.info("del  terminal")
	}
	try{

	def delgrel = sql.rows("delete from public.r_group_terminal where mdn  like '181000000%'")
	}catch(Exception e){
		log.info("del  rgroupterminal")
	}
		log.info("del emp  done...")
	def sql2 = Sql.newInstance(DBProperties.getPropertyValue("DB_Permission_Connection_URL"),DBProperties.getPropertyValue("DB_loginname"),DBProperties.getPropertyValue("DB_Password"),DBProperties.getPropertyValue("DB_Driver_Class"));
	try{
	def delemp = sql2.rows("delete from public.users where mdn  like '181000000%'")
	}catch(Exception e){
		log.info("del  users")
	}
	log.info("del users done")
}catch(Exception e){
	e.printStackTrace();
}

finally{
	try{ sql.close();log.info("close");}catch(Exception e){log.info("Final:"+e);}
}
</con:setupScript><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>6723ac76-2e2c-467e-b7b0-cf1e758fa9d8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>560d5930-5dce-417a-ac3f-79f13964fd9c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="employeeDelete" searchProperties="true" id="22facf40-53aa-4608-a069-9969ebcd65c4"><con:settings/><con:testStep type="groovy" name="pre-step" id="8247a039-3c65-4e16-b815-ef2340bfafe8"><con:settings/><con:config><script>import groovy.sql.Sql;
try{
	def DBProperties = testRunner.testCase.getTestSuite();
	def sql = Sql.newInstance(DBProperties.getPropertyValue("DB_Connection_URL"),DBProperties.getPropertyValue("DB_loginname"),DBProperties.getPropertyValue("DB_Password"),DBProperties.getPropertyValue("DB_Driver_Class"));
	try{
	def empid = sql.rows("select id from public.employee where mdn =  '18100000000' and status = '1'")
	id = empid[0].id
//	log.info("emp to del is ${id}")

//	log.info("it is:${empId}")
	}catch(Exception e){
		e.printStackTrace();

	}
	

}catch(Exception e){
	e.printStackTrace();
}

finally{
	try{ sql.close();log.info("close");}catch(Exception e){log.info("Final:"+e);}
}
</script></con:config></con:testStep><con:testStep type="datasource" name="DataSource" id="1dd6df88-0eff-4bf3-a72c-8b8b27e9e5a1"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">${pre-step#result}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">aa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">0</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-21</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">9195</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">${pre-step#result}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">!@#$%^</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>empId</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="employeeDelete"><con:settings/><con:config service="COP_Requests" resourcePath="/employee/delete" methodName="Basis" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="employeeDelete" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"empId":${DataSource#empId}
}</con:request><con:originalUri>http://192.168.12.170/basis/employee/delete</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-15;i++){
		if(wsdlstring[i..i+3] == "code"){
			if(wsdlstring[i+7..i+11]=="pages"){
				code = wsdlstring[i+7..i+15]
				break
			}else{
					code = wsdlstring[i+7..i+11]
					break
				}
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="e884d0c3-d8c9-4839-9a05-8a820091847d"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>employeeDelete</targetStep></con:config></con:testStep><con:setupScript>import groovy.sql.Sql;
try{
	def DBProperties = testRunner.testCase.getTestSuite();
	def sql = Sql.newInstance(DBProperties.getPropertyValue("DB_Connection_URL"),DBProperties.getPropertyValue("DB_loginname"),DBProperties.getPropertyValue("DB_Password"),DBProperties.getPropertyValue("DB_Driver_Class"));
	def updatedel = sql.rows("update public.employee set status = '0' where id = '21'")
}catch(Exception e){
	e.printStackTrace();
}
finally{
	try{ sql.close();log.info("close");}catch(Exception e){log.info("Final:"+e);}
}</con:setupScript><con:properties><con:property><con:name>empId</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>1dd6df88-0eff-4bf3-a72c-8b8b27e9e5a1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e884d0c3-d8c9-4839-9a05-8a820091847d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8247a039-3c65-4e16-b815-ef2340bfafe8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="employeeUpdate" searchProperties="true" id="653c0df0-a275-4e84-b1c7-141a4369d43c"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">22</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">修改员工</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">备注而已</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">22222</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">备注而已</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">22</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">备注而已</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">22</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">22222</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">备注而已</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">22</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">22222</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">a</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">22222</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">备注而已</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">22</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">阿飞</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">22</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">22222</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">a</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">备22222啊</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">2212312312312312312312322222222222222222222222222222222222222222222222222222222222222222222222222222</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">22222</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">备注而已</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">22</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">22222啊手机的疯狂啦就流口水的饭卡里说；发卡量十分艰苦拉萨空间里的风景啊看来士大夫艰苦拉萨角度考虑发神经开绿灯飞机啊就考了多少分就拉开士大夫艰苦了</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">备注而已</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">22</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">22222</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">99</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">哈哈哈哈哈哈哈</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-22</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">22222</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">备注而已</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">22</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">22222啊看来对方！@#￥%……&amp;*（）)(*&amp;^%$#</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">备注而已</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">22</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">22222</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">备注而已</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">22</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">22222</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">备注而已!@#$%^&amp;**()）备注而已</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00011</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">22</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">待修改</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">2</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">阿飞</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>empId</con:property><con:property>name</con:property><con:property>gender</con:property><con:property>remark</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="employeeUpdate"><con:settings/><con:config service="COP_Requests" resourcePath="/employee/update" methodName="Basis" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="employeeUpdate" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"empId":${DataSource#empId},
"name":${DataSource#name},
"gender":${DataSource#gender},
"remark":"${DataSource#remark}"
}
</con:request><con:originalUri>http://192.168.12.170/basis/employee/update</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="result" disabled="true"><con:settings/><con:config><script>//save result to d:\\cop-log.txt
//need to change teststep's name
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def wsdlResponse=testRunner.testCase.testSteps["employeeUpdate"].getTestRequest().getResponseContentAsString()
//com.eviware.soapui.impl.wsdl.teststeps.WsdlDataSourceTestStep
def dataSource=testRunner.testCase.testSteps['DataSource']
def row=dataSource.getCurrentRow()
File log = new File("D:\\cop-employeeUpdate-log.txt")
log.withWriterAppend( 'GB2312' ){ w->
def line = context.expand( '${DataSource#line}' )
   w&lt;&lt;"****************************Line:"+row+"****************************"+'\n'+wsdlResponse+'\n'
}</script></con:config></con:testStep><con:testStep type="groovy" name="output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-15;i++){
		if(wsdlstring[i..i+3] == "code"){
			if(wsdlstring[i+7..i+11]=="pages"){
				code = wsdlstring[i+7..i+15]
				break
			}else{
					code = wsdlstring[i+7..i+11]
					break
				}
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="5a50d959-b2ec-4a73-9175-84376fba7e2d"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>employeeUpdate</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>6723ac76-2e2c-467e-b7b0-cf1e758fa9d8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5a50d959-b2ec-4a73-9175-84376fba7e2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="addRole" searchProperties="true" id="d8344856-c63e-4a34-828a-a8fe2b4589b7"><con:settings/><con:testStep type="datasource" name="DataSource" id="610f1732-3fa1-4ea1-8263-eaa3dbed18a3"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">52</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[92,93]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[92,93]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">52</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">aaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[92]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">52</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">aaaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">52</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[aaa,bbb]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">99999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[94]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">52</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[999999999999999]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[92,93]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">52</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[-2,-3]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">99227</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[92,93]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_EXIST_EMPLOYEE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">52</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[99227]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">52</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[92]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">!@#$%^&amp;*()</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[92]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">52</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">!@#$%^&amp;</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>empId</con:property><con:property>roleIds</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="addRole"><con:settings/><con:config service="COP_Requests" resourcePath="/employee/addRole" methodName="Basis" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="addRole" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{"empId":${DataSource#empId},"roleIds":${DataSource#roleIds}}</con:request><con:originalUri>http://192.168.12.170/basis/employee/addRole</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-15;i++){
		if(wsdlstring[i..i+3] == "code"){
			if(wsdlstring[i+7..i+11]=="pages"){
				code = wsdlstring[i+7..i+15]
				break
			}else{
					code = wsdlstring[i+7..i+11]
					break
				}
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>addRole</targetStep></con:config></con:testStep><con:setupScript>import groovy.sql.Sql;
try{
	def DBProperties = testRunner.testCase.getTestSuite();
	def sql = Sql.newInstance(DBProperties.getPropertyValue("DB_Connection_URL"),DBProperties.getPropertyValue("DB_loginname"),DBProperties.getPropertyValue("DB_Password"),DBProperties.getPropertyValue("DB_Driver_Class"));
	def updatedel = sql.rows("delete from public.r_group_terminal where group_id = '11'")
}catch(Exception e){
	e.printStackTrace();
}
finally{
	try{ sql.close();log.info("close");}catch(Exception e){log.info("Final:"+e);}
}</con:setupScript><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>610f1732-3fa1-4ea1-8263-eaa3dbed18a3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="delRole" searchProperties="true" id="3820939e-c535-4109-892a-800e19242362"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">52</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[92,93]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[92,93]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">52</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">aaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[92]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">52</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">aaaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">52</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[aaa,bbb]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">99999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[94]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">52</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[999999999999999]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[92,93]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">52</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[-2,-3]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">99227</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[92,93]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_EXIST_EMPLOYEE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">52</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[99227]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">52</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[92]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">!@#$%^&amp;*()</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[92]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">52</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">!@#$%^&amp;</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>empId</con:property><con:property>roleIds</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="delRole"><con:settings/><con:config service="COP_Requests" resourcePath="/employee/delRole" methodName="Basis" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="delRole" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{"empId":${DataSource#empId},"roleIds":${DataSource#roleIds}}</con:request><con:originalUri>http://192.168.12.170/basis/employee/delRole</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-15;i++){
		if(wsdlstring[i..i+3] == "code"){
			if(wsdlstring[i+7..i+11]=="pages"){
				code = wsdlstring[i+7..i+15]
				break
			}else{
					code = wsdlstring[i+7..i+11]
					break
				}
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>delRole</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>610f1732-3fa1-4ea1-8263-eaa3dbed18a3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="attentionAddEmp" searchProperties="true" id="07b216df-f9c4-4a02-98d2-f32214470988"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[7,8]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[4]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">999999999999999999999999999999999999999999999999999999999999999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[5]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[883]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">aaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[400]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[a,b,c]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[7]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[401]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[-402]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">!@#$%^&amp;*()</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[404]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[405,"%&amp;^^*&amp;"]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>userId</con:property><con:property>empIds</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="attentionAddEmp"><con:settings/><con:config service="COP_Requests" resourcePath="/attention/addEmp" methodName="Basis" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="attentionAddEmp" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"userId":${DataSource#userId},
"empIds":${DataSource#empIds}
}</con:request><con:originalUri>http://192.168.12.170/basis/attention/addEmp</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="result" disabled="true"><con:settings/><con:config><script>//save result to d:\\cop-log.txt
//need to change teststep's name
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def wsdlResponse=testRunner.testCase.testSteps["attentionAddEmp"].getTestRequest().getResponseContentAsString()
//com.eviware.soapui.impl.wsdl.teststeps.WsdlDataSourceTestStep
def dataSource=testRunner.testCase.testSteps['DataSource']
def row=dataSource.getCurrentRow()
File log = new File("D:\\cop-attentionAddEmp-log.txt")
log.withWriterAppend( 'GB2312' ){ w->
def line = context.expand( '${DataSource#line}' )
   w&lt;&lt;"****************************Line:"+row+"****************************"+'\n'+wsdlResponse+'\n'
}</script></con:config></con:testStep><con:testStep type="groovy" name="output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-15;i++){
		if(wsdlstring[i..i+3] == "code"){
			if(wsdlstring[i+7..i+11]=="pages"){
				code = wsdlstring[i+7..i+15]
				break
			}else{
					code = wsdlstring[i+7..i+11]
					break
				}
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="1aefb8e5-1ae3-48e5-bcdb-119187e9362e"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>attentionAddEmp</targetStep></con:config></con:testStep><con:setupScript>import groovy.sql.Sql;
try{
	def DBProperties = testRunner.testCase.getTestSuite();
	def sql = Sql.newInstance(DBProperties.getPropertyValue("DB_Connection_URL"),DBProperties.getPropertyValue("DB_loginname"),DBProperties.getPropertyValue("DB_Password"),DBProperties.getPropertyValue("DB_Driver_Class"));
	def delattention = sql.rows("delete from public.attention_emp where followed_user_id = '123' or followed_user_id = '-123'")
}catch(Exception e){
	e.printStackTrace();
}
finally{
	try{ sql.close();log.info("close");}catch(Exception e){log.info("Final:"+e);}
}</con:setupScript><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>ecfb5be4-b002-4944-b0a9-f8cd0ae290c8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f345a284-e9e2-4444-9035-25028ef67b34</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>37ce3724-6d28-442d-b1a4-deb09ab53172</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ffe854cd-39ed-4908-986f-59286cd01c71</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1aefb8e5-1ae3-48e5-bcdb-119187e9362e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="attentionDelEmp" searchProperties="true" id="d8c9d126-37c1-42a7-93ba-531d0f16a41e"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[7,8]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[4]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">999999999999999999999999999999999999999999999999999999999999999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[5]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[3334]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">aaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[400]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[a,b,c]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[401]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[401]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[-402]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">!@#$%^&amp;*()</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[404]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[405,"%&amp;^^*&amp;"]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>userId</con:property><con:property>empIds</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="attentionDelEmp"><con:settings/><con:config service="COP_Requests" resourcePath="/attention/delEmp" methodName="Basis" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="attentionDelEmp" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"userId":${DataSource#userId},
"empIds":${DataSource#empIds}
}</con:request><con:originalUri>http://192.168.12.170/basis/attention/delEmp</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="result" disabled="true"><con:settings/><con:config><script>//save result to d:\\cop-log.txt
//need to change teststep's name
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def wsdlResponse=testRunner.testCase.testSteps["attentionDelEmp"].getTestRequest().getResponseContentAsString()
//com.eviware.soapui.impl.wsdl.teststeps.WsdlDataSourceTestStep
def dataSource=testRunner.testCase.testSteps['DataSource']
def row=dataSource.getCurrentRow()
File log = new File("D:\\cop-attentionDelEmp-log.txt")
log.withWriterAppend( 'GB2312' ){ w->
def line = context.expand( '${DataSource#line}' )
   w&lt;&lt;"****************************Line:"+row+"****************************"+'\n'+wsdlResponse+'\n'
}</script></con:config></con:testStep><con:testStep type="groovy" name="output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-15;i++){
		if(wsdlstring[i..i+3] == "code"){
			if(wsdlstring[i+7..i+11]=="pages"){
				code = wsdlstring[i+7..i+15]
				break
			}else{
					code = wsdlstring[i+7..i+11]
					break
				}
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="3bc3c190-9993-439f-ad29-738f2a0482f5"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>attentionDelEmp</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>ecfb5be4-b002-4944-b0a9-f8cd0ae290c8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3bc3c190-9993-439f-ad29-738f2a0482f5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="attentionQueryEmp" searchProperties="true" id="323fcd9a-5e02-4aa9-8cbf-a055d23e858c"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123456789012345678901234567890991</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">abc</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">9999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00200</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-1234</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">"a@#$%^&amp;*()"</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>userId</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="attentionQueryEmp"><con:settings/><con:config service="COP_Requests" resourcePath="/attention/queryEmp" methodName="Basis" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="attentionQueryEmp" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"userId":${DataSource#userId}
}</con:request><con:originalUri>http://192.168.12.170/basis/attention/queryEmp</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="result" disabled="true"><con:settings/><con:config><script>//save result to d:\\cop-log.txt
//need to change teststep's name
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def wsdlResponse=testRunner.testCase.testSteps["attentionQueryEmp"].getTestRequest().getResponseContentAsString()
//com.eviware.soapui.impl.wsdl.teststeps.WsdlDataSourceTestStep
def dataSource=testRunner.testCase.testSteps['DataSource']
def row=dataSource.getCurrentRow()
File log = new File("D:\\cop-attentionQueryEmp-log.txt")
log.withWriterAppend( 'GB2312' ){ w->
def line = context.expand( '${DataSource#line}' )
   w&lt;&lt;"****************************Line:"+row+"****************************"+'\n'+wsdlResponse+'\n'
}</script></con:config></con:testStep><con:testStep type="groovy" name="output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-15;i++){
		if(wsdlstring[i..i+3] == "code"){
			if(wsdlstring[i+7..i+11]=="pages"){
				code = wsdlstring[i+7..i+15]
				break
			}else{
					code = wsdlstring[i+7..i+11]
					break
				}
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="d0aece82-e370-4289-bde0-65cdb1ba9990"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>attentionQueryEmp</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>ecfb5be4-b002-4944-b0a9-f8cd0ae290c8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21960282-da4a-492c-8129-70f201580ddb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d0aece82-e370-4289-bde0-65cdb1ba9990</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="attentionAddDep" searchProperties="true" id="5c36ca53-a0fd-431f-91d5-ef379d5a3899"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">[4,5]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">[1,2,3]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">[123456789012345678901234567890991]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">[5]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123456789012345678901234567890991</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">abc</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">[6]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">abc</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">[4,5]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">[7]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">4321</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">[-4]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">[4]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">-123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">[@#$,%^&amp;,*(0]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">[4]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">!@#$%^</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">[6643]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>depIds</con:property><con:property>userId</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="attentionAddDep" id="dc50942f-07c8-4854-8f87-049b680ea2b9"><con:settings/><con:config service="COP_Requests" resourcePath="/attention/addDep" methodName="Basis" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="attentionAddDep" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"depIds":${DataSource#depIds},
"userId":${DataSource#userId}
}</con:request><con:originalUri>http://192.168.12.170/basis/attention/addDep</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-15;i++){
		if(wsdlstring[i..i+3] == "code"){
			if(wsdlstring[i+7..i+11]=="pages"){
				code = wsdlstring[i+7..i+15]
				break
			}else{
					code = wsdlstring[i+7..i+11]
					break
				}
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="2f998704-67db-4db7-b674-d83d6278a2c4"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>attentionAddDep</targetStep></con:config></con:testStep><con:setupScript>import groovy.sql.Sql;
try{
	def DBProperties = testRunner.testCase.getTestSuite();
	def sql = Sql.newInstance(DBProperties.getPropertyValue("DB_Connection_URL"),DBProperties.getPropertyValue("DB_loginname"),DBProperties.getPropertyValue("DB_Password"),DBProperties.getPropertyValue("DB_Driver_Class"));
	def delattention = sql.rows("delete from public.attention_dep where followed_user_id = '123' or followed_user_id = '-123' or followed_user_id = '4321'")
}catch(Exception e){
	e.printStackTrace();
}
finally{
	try{ sql.close();log.info("close");}catch(Exception e){log.info("Final:"+e);}
}</con:setupScript><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>ecfb5be4-b002-4944-b0a9-f8cd0ae290c8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2f998704-67db-4db7-b674-d83d6278a2c4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>dc50942f-07c8-4854-8f87-049b680ea2b9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="attentionDelDep" searchProperties="true" id="ee4cbc87-aa1d-4d81-9ed2-b194a9913b6c"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">[4,5]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">[1,2,3]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">[123456789012345678901234567890991]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">[5]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123456789012345678901234567890991</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">abc</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">[6]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">abc</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">[4,5]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">[7]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">4444</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">[-4]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">[8]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">-123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">[@#$,%^&amp;,*(0]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">[99]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">!@#$%^</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>depIds</con:property><con:property>userId</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="attentionDelDep"><con:settings/><con:config service="COP_Requests" resourcePath="/attention/delDep" methodName="Basis" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="attentionDelDep" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"depIds":${DataSource#depIds},
"userId":${DataSource#userId}
}</con:request><con:originalUri>http://192.168.12.170/basis/attention/delDep</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-15;i++){
		if(wsdlstring[i..i+3] == "code"){
			if(wsdlstring[i+7..i+11]=="pages"){
				code = wsdlstring[i+7..i+15]
				break
			}else{
					code = wsdlstring[i+7..i+11]
					break
				}
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="e52aa17b-44a5-4cf8-9e30-bb40ed7e6819"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>attentionDelDep</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>ecfb5be4-b002-4944-b0a9-f8cd0ae290c8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e52aa17b-44a5-4cf8-9e30-bb40ed7e6819</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="attentionQueryDep" searchProperties="true" id="0620aee2-86a6-4164-8005-369488218188"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">a</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123456789012345678901234567890991</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">12345</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00200</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">$%$^%</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>userId</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="attentionQueryDep"><con:settings/><con:config service="COP_Requests" resourcePath="/attention/queryDep" methodName="Basis" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="attentionQueryDep" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"userId":${DataSource#userId}
}</con:request><con:originalUri>http://192.168.12.170/basis/attention/queryDep</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-15;i++){
		if(wsdlstring[i..i+3] == "code"){
			if(wsdlstring[i+7..i+11]=="pages"){
				code = wsdlstring[i+7..i+15]
				break
			}else{
					code = wsdlstring[i+7..i+11]
					break
				}
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>attentionQueryDep</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>f6dbce14-c873-4ded-811e-416890864d88</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="attentionAddAddr" searchProperties="true" id="1e36ea5e-d3c2-4ef0-8c40-b9b076919d72"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">120</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[1,2,3]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[1,2,3]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">121</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">122</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[1,2,3]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123456789012345678901234567890991</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[6]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[123456789012345678901234567890991]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">124</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[1,2,3,4,5]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123456789012345678901234567890991</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">a</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[1,2,3,4,5]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">125</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[bc]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">126</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[6]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">aaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">120</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[1,2,3]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#FOLLOW_EXIST_ADDRESS}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-120</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[1,2]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">128</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[-1,-2]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">129</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[6]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">-123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">*^&amp;*</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[7]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">130</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[8,*(&amp;*(&amp;]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">131</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[9]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">*&amp;*(*&amp;(@!#</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>tableId</con:property><con:property>dataIds</con:property><con:property>userId</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="attentionAddAddr"><con:settings/><con:config service="COP_Requests" resourcePath="/attention/addAddr" methodName="Basis" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="attentionAddAddr" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"tableId":${DataSource#tableId},
"dataIds":${DataSource#dataIds},
"userId":${DataSource#userId}
}</con:request><con:originalUri>http://192.168.12.170/basis/attention/addAddr</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-15;i++){
		if(wsdlstring[i..i+3] == "code"){
			if(wsdlstring[i+7..i+11]=="pages"){
				code = wsdlstring[i+7..i+15]
				break
			}else{
					code = wsdlstring[i+7..i+11]
					break
				}
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>attentionAddAddr</targetStep></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" disabled="true"><con:settings/><con:config><script>def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-15;i++){
		if(wsdlstring[i..i+3] == "code"){
			if(wsdlstring[i+7..i+11]=="pages"){
				code = wsdlstring[i+7..i+15]
				break
			}else{
					code = wsdlstring[i+7..i+11]
					break
				}
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
log.info(code)</script></con:config></con:testStep><con:setupScript>import groovy.sql.Sql;
try{
	def DBProperties = testRunner.testCase.getTestSuite();
	def sql = Sql.newInstance(DBProperties.getPropertyValue("DB_Connection_URL"),DBProperties.getPropertyValue("DB_loginname"),DBProperties.getPropertyValue("DB_Password"),DBProperties.getPropertyValue("DB_Driver_Class"));
	def delattention = sql.rows("delete from public.attention_addr where followed_user_id = '123' or followed_user_id = '-123'")
}catch(Exception e){
	e.printStackTrace();
}
finally{
	try{ sql.close();log.info("close");}catch(Exception e){log.info("Final:"+e);}
}</con:setupScript><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>607e8bfb-b84e-4c15-aa6f-bb8f8581a6b3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="attentionDelAddr" searchProperties="true" id="41be44d3-2371-4aaa-a96e-b66bba2f4043"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">120</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[1,2]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[1,2,3,4,5]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">120</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[1,2,3,4,5]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123456789012345678901234567890991</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[6]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">120</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[123456789012345678901234567890991]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">120</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[1,2,3,4,5]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123456789012345678901234567890991</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">a</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[1,2,3,4,5]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">120</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[bc]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">120</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[6]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">aaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1200</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[1,2]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">120</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[1,2]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">222</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">120</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[4,5]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-120</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[1,2]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">128</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[-1]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">120</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[6]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">-123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">*^&amp;*</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[7]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">120</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[8,*(&amp;*(&amp;]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">120</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[9]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">*&amp;*(*&amp;(@!#</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">120</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[22,23]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>tableId</con:property><con:property>dataId</con:property><con:property>userId</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="attentionDelAddr"><con:settings/><con:config service="COP_Requests" resourcePath="/attention/delAddr" methodName="Basis" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="attentionDelAddr" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"tableId":${DataSource#tableId},
"dataIds":${DataSource#dataId},
"userId":${DataSource#userId}
}</con:request><con:originalUri>http://192.168.12.170/basis/attention/delAddr</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-15;i++){
		if(wsdlstring[i..i+3] == "code"){
			if(wsdlstring[i+7..i+11]=="pages"){
				code = wsdlstring[i+7..i+15]
				break
			}else{
					code = wsdlstring[i+7..i+11]
					break
				}
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>attentionDelAddr</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>607e8bfb-b84e-4c15-aa6f-bb8f8581a6b3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="attentionQueryAddr" searchProperties="true" id="14fd2cd8-e524-47bc-a083-d625e8938fda"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123456789012345678901234567890991</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">aaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">2222</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00200</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">^&amp;*^@#&amp;*$!@</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>userId</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="attentionQueryAddr"><con:settings/><con:config service="COP_Requests" resourcePath="/attention/queryAddr/" methodName="Basis" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="attentionQueryAddr" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002/basis</con:endpoint><con:request>{
"userId":${DataSource#userId}
}</con:request><con:originalUri>http://192.168.12.170/basis/attention/queryAddr/</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>userId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-15;i++){
		if(wsdlstring[i..i+3] == "code"){
			if(wsdlstring[i+7..i+11]=="pages"){
				code = wsdlstring[i+7..i+15]
				break
			}else{
					code = wsdlstring[i+7..i+11]
					break
				}
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>attentionQueryAddr</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>607e8bfb-b84e-4c15-aa6f-bb8f8581a6b3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="noticeAdd(load)" searchProperties="true" id="ad324624-6e0c-4a8d-9fd5-0a8cb8632541" disabled="true"><con:settings/><con:testStep type="restrequest" name="noticeAdd(load)"><con:settings/><con:config service="COP_Requests" resourcePath="/notice/add" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="noticeAdd(load)" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request>{"name":"entrole","entId":1314 ,"descr":"角色描述","menuList":[{"menuId":123, "menuName":"name"}],"modelList":[{"modelId":23,"modelName":"tianyiduijiang"}]}</con:request><con:originalUri>http://192.168.12.170/basis/role/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}


def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-15;i++){
		if(wsdlstring[i..i+3] == "code"){
			if(wsdlstring[i+7..i+11]=="pages"){
				code = wsdlstring[i+7..i+15]
				break
			}else{
					code = wsdlstring[i+7..i+11]
					break
				}
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps["${testcase.name}"].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = "00000"
//def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=1;
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="noticeAdd" searchProperties="true" id="b440509a-601a-47e0-a346-df5be5d60ab5"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试1测试1测试1测试1测试1测试1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">"http: //XXXX","”http: //XXXX2"</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">http://www.baidu.com/pic.png</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试2</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">侧室2222</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">测试3</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试3</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">333</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">测试4</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">4444</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试5</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">5555</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试6</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试6</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">aaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试7</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试7</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">7777</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">llla</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试8</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试8</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">8888</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">9999999990</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试9</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试9</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">9999999990</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">101010</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试11</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试11</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">test11</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">-123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试12</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试12</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">1212</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">8888</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试13</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试13</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">1313</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">8888</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试13</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试13</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">1313</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_EXIST_ENTERPRISE}</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>userId</con:property><con:property>entId</con:property><con:property>notice.title</con:property><con:property>notice.content</con:property><con:property>notice.attachmentUrls</con:property><con:property>notice.coverPicUrl</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="noticeAdd"><con:settings/><con:config service="COP_Requests" resourcePath="/notice/add" methodName="noticeAdd2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="noticeAdd" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request>{
"userId":${DataSource#userId},
"entId":${DataSource#entId},
"notice":{
		"title":"${DataSource#notice.title}",
		"content":"${DataSource#notice.content}",
		"coverPicUrl":"${DataSource#notice.coverPicUrl}"
		}
}</con:request><con:originalUri>http://192.168.100.20/basis/notice/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="result" disabled="true"><con:settings/><con:config><script>//save result to d:\\cop-log.txt
//need to change teststep's name
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def testSuites=testRunner.testCase.getTestSuite();
def testcase = testRunner.testCase;
//获取上下文对象,转化成groovyUtils对象
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
//com.eviware.soapui.impl.wsdl.teststeps.WsdlDataSourceTestStep
def dataSource=testRunner.testCase.testSteps['DataSource']
def row=dataSource.getCurrentRow()
File log = new File("D:\\cop-noticeAdd-log.txt")
log.withWriterAppend( 'GB2312' ){ w->
def line = context.expand( '${DataSource#line}' )
   w&lt;&lt;"****************************Line:"+row+"****************************"+'\n'+wsdlResponse+'\n'
}</script></con:config></con:testStep><con:testStep type="groovy" name="output" id="fed7ddd4-a476-4bd6-95e2-fd841fd911b4"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-15;i++){
		if(wsdlstring[i..i+3] == "code"){
			if(wsdlstring[i+7..i+11]=="pages"){
				code = wsdlstring[i+7..i+15]
				break
			}else{
					code = wsdlstring[i+7..i+11]
					break
				}
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>noticeAdd</targetStep></con:config></con:testStep><con:properties><con:property><con:name>date</con:name><con:value>2017-02-22</con:value></con:property><con:property><con:name>LogFile - Check Response</con:name><con:value>d:\SoapUI_log\2017-02-22\Test - noticeAdd - Wed Feb 22 15-27-39 CST 2017.log</con:value></con:property><con:property><con:name>LogFile - Response Detail</con:name><con:value>d:\SoapUI_log\2017-02-22\Test - noticeAdd - Wed Feb 22 15-27-39 CST 2017 Response Detail.log</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>3baa336b-00b1-4839-9001-40744b9d68e7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84b68ee4-6c9f-4150-8abc-3c8171a91c38</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>16ae4d48-315c-4c70-af92-3491d1311995</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fed7ddd4-a476-4bd6-95e2-fd841fd911b4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="noticeQueryList(load)" searchProperties="true" id="43d899f0-5f19-4dad-91c4-0e1375890cef" disabled="true"><con:settings/><con:testStep type="restrequest" name="noticeQueryList(load)"><con:settings/><con:config service="COP_Requests" resourcePath="/notice/queryList" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="noticeQueryList(load)" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request>{
"userId":nt,
"entId":nt,
"notice": sting,
"title":string,
"content":string,
"attachmentUrls":sting
}</con:request><con:originalUri>http://192.168.12.170/basis/role/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="output" id="bc1e8489-c868-4fcf-9d6d-4771aa272eeb"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}


def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-15;i++){
		if(wsdlstring[i..i+3] == "code"){
			if(wsdlstring[i+7..i+11]=="pages"){
				code = wsdlstring[i+7..i+15]
				break
			}else{
					code = wsdlstring[i+7..i+11]
					break
				}
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps["${testcase.name}"].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = "00000"
//def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=1;
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="noticeQuery" searchProperties="true" id="170b2f4e-bd9b-40c6-9172-b2a2502fea67"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">2016-10-10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">2017-02-10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">233</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">2016-10-10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">2017-02-22</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">新</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">20</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">2017-02-22</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">新</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">2016-10-10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">新</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">2016-10-10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">2017-02-22</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">2016-10-10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">2017-02-22</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">新</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">2016-10-10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">2017-02-22</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">新</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">新</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">9999999991</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">22</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">abc</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">2016-10-10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">2017-02-10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">233</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">22222222</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">2222222333</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00802</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">aaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">bbbb</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00802</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">2016-10-10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">2017-02-22</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">a</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">2016-10-10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">2017-02-22</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">b</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">2017-10-10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">2016-02-22</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00801</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>entId</con:property><con:property>startDate</con:property><con:property>endDate</con:property><con:property>title</con:property><con:property>currPage</con:property><con:property>recNumPerPage</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="noticeQuery"><con:settings/><con:config service="COP_Requests" resourcePath="/notice/query" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="noticeQuery" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request>{
"entId":${DataSource#entId},
"startDate":"${DataSource#startDate}",
"endDate":"${DataSource#endDate}",
"title":"${DataSource#title}",
"currPage":${DataSource#currPage},
"recNumPerPage":${DataSource#recNumPerPage}
}</con:request><con:originalUri>http://192.168.12.170/basis/role/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="result" disabled="true"><con:settings/><con:config><script>//save result to d:\\cop-log.txt
//need to change teststep's name
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def wsdlResponse=testRunner.testCase.testSteps["noticeQuery"].getTestRequest().getResponseContentAsString()
//com.eviware.soapui.impl.wsdl.teststeps.WsdlDataSourceTestStep
def dataSource=testRunner.testCase.testSteps['DataSource']
def row=dataSource.getCurrentRow()
File log = new File("D:\\cop-noticeQuery-log.txt")
log.withWriterAppend( 'GB2312' ){ w->
def line = context.expand( '${DataSource#line}' )
   w&lt;&lt;"****************************Line:"+row+"****************************"+'\n'+wsdlResponse+'\n'
}</script></con:config></con:testStep><con:testStep type="groovy" name="output" id="28dd80f6-6b1c-4fe0-890b-9bbf980863c3"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-15;i++){
		if(wsdlstring[i..i+3] == "code"){
			if(wsdlstring[i+7..i+11]=="pages"){
				code = wsdlstring[i+7..i+15]
				break
			}else{
					code = wsdlstring[i+7..i+11]
					break
				}
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>noticeQuery</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>b27d4956-aa1c-4216-ac9d-402359a59035</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2576824f-e94f-43ff-8cb3-a4e3852b6950</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>28dd80f6-6b1c-4fe0-890b-9bbf980863c3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="noticeQueryApp" searchProperties="true" id="52805c8d-fe95-4701-b737-c50349ce011c"><con:settings/><con:testStep type="datasource" name="DataSource" id="3e9d0314-3835-453c-b307-b6e67a3ce754"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">20</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">00002</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00002</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">00002</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">aaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">aaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">9999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">20</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">9999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">-99</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">34534</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_EXIST_ENTERPRISE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>entId</con:property><con:property>noticeId</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="noticeQueryApp"><con:settings/><con:config service="COP_Requests" resourcePath="/notice/queryApp/{entId}/{noticeId}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="noticeQueryApp" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request>{
"noticeId":1,
"entId":123
}</con:request><con:originalUri>http://192.168.12.170/basis/role/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="noticeId" value="${DataSource#noticeId}"/>
  <con:entry key="entId" value="${DataSource#entId}"/>
</con:parameters><con:parameterOrder><con:entry>entId</con:entry><con:entry>noticeId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-15;i++){
		if(wsdlstring[i..i+3] == "code"){
			if(wsdlstring[i+7..i+11]=="pages"){
				code = wsdlstring[i+7..i+15]
				break
			}else{
					code = wsdlstring[i+7..i+11]
					break
				}
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>noticeQueryApp</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="noticeGet(load)" searchProperties="true" id="4db00223-d017-4868-bca2-cc72a05d9510" disabled="true"><con:settings/><con:testStep type="restrequest" name="noticeGet(load)"><con:settings/><con:config service="COP_Requests" resourcePath="/notice/get" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="noticeGet(load)" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request>{
"userId":nt,
"entId":nt,
"notice": sting,
"title":string,
"content":string,
"attachmentUrls":sting
}</con:request><con:originalUri>http://192.168.12.170/basis/role/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}


def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-15;i++){
		if(wsdlstring[i..i+3] == "code"){
			if(wsdlstring[i+7..i+11]=="pages"){
				code = wsdlstring[i+7..i+15]
				break
			}else{
					code = wsdlstring[i+7..i+11]
					break
				}
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps["${testcase.name}"].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = "00000"
//def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=1;
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8f9bc1c9-e0cb-474a-88e9-2e2fc1924ada</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="noticeGet" searchProperties="true" id="bd8436cf-b830-4e9d-93e1-78c3314a1769"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row>&lt;xml-fragment>&lt;con:entry xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">00002&lt;/con:entry>&lt;/xml-fragment></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">9999999991</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">aaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00803</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>noticeId</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="noticeGet"><con:settings/><con:config service="COP_Requests" resourcePath="/notice/get/{noticeId}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="noticeGet" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request>{
"userId":nt,
"entId":nt,
"notice": sting,
"title":string,
"content":string,
"attachmentUrls":sting
}</con:request><con:originalUri>http://192.168.12.170/basis/role/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="noticeId" value="${DataSource#noticeId}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>noticeId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="result" disabled="true"><con:settings/><con:config><script>//save result to d:\\cop-log.txt
//need to change teststep's name
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def wsdlResponse=testRunner.testCase.testSteps["noticeGet"].getTestRequest().getResponseContentAsString()
//com.eviware.soapui.impl.wsdl.teststeps.WsdlDataSourceTestStep
def dataSource=testRunner.testCase.testSteps['DataSource']
def row=dataSource.getCurrentRow()
File log = new File("D:\\cop-noticeGet-log.txt")
log.withWriterAppend( 'GB2312' ){ w->
def line = context.expand( '${DataSource#line}' )
   w&lt;&lt;"****************************Line:"+row+"****************************"+'\n'+wsdlResponse+'\n'
}</script></con:config></con:testStep><con:testStep type="groovy" name="output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-15;i++){
		if(wsdlstring[i..i+3] == "code"){
			if(wsdlstring[i+7..i+11]=="pages"){
				code = wsdlstring[i+7..i+15]
				break
			}else{
					code = wsdlstring[i+7..i+11]
					break
				}
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="f8dceb74-42a0-4304-a629-27b8d3fd2f2d"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>noticeGet</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>b36e25c9-40d1-49fc-90b0-0e78e08126b9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6e07c8f-84e4-4395-879a-2de0d16bd3e1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f8dceb74-42a0-4304-a629-27b8d3fd2f2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bc1e8489-c868-4fcf-9d6d-4771aa272eeb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="noticeGetApp" searchProperties="true" id="0fd34c00-60e2-4574-bbc3-83e248785ad8"><con:settings/><con:testStep type="datasource" name="DataSource" id="815adb25-a816-4d6b-8cb6-3b42535adcf3"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row>&lt;xml-fragment>&lt;con:entry xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">00002&lt;/con:entry>&lt;/xml-fragment></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">9999999991</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">aaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00803</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>noticeId</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="noticeGetApp"><con:settings/><con:config service="COP_Requests" resourcePath="/notice/getApp/{noticeId}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="noticeGetApp" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request>{
"userId":nt,
"entId":nt,
"notice": sting,
"title":string,
"content":string,
"attachmentUrls":sting
}</con:request><con:originalUri>http://192.168.12.170/basis/role/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="noticeId" value="${DataSource#noticeId}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>noticeId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="result" disabled="true"><con:settings/><con:config><script>//save result to d:\\cop-log.txt
//need to change teststep's name
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def wsdlResponse=testRunner.testCase.testSteps["noticeGetApp"].getTestRequest().getResponseContentAsString()
//com.eviware.soapui.impl.wsdl.teststeps.WsdlDataSourceTestStep
def dataSource=testRunner.testCase.testSteps['DataSource']
def row=dataSource.getCurrentRow()
File log = new File("D:\\cop-noticeGetApp-log.txt")
log.withWriterAppend( 'GB2312' ){ w->
def line = context.expand( '${DataSource#line}' )
   w&lt;&lt;"****************************Line:"+row+"****************************"+'\n'+wsdlResponse+'\n'
}</script></con:config></con:testStep><con:testStep type="groovy" name="output" id="e5b8d2a6-2ef7-4567-b6f6-ca83bb4eb683"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-15;i++){
		if(wsdlstring[i..i+3] == "code"){
			if(wsdlstring[i+7..i+11]=="pages"){
				code = wsdlstring[i+7..i+15]
				break
			}else{
					code = wsdlstring[i+7..i+11]
					break
				}
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="bfa2099c-6be5-4af1-80a5-4c3d54a539de"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>noticeGetApp</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>42cf6f1c-36e3-4813-a7a4-cb9663432d78</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a33c873f-894e-4a90-9419-af411be5a77c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>815adb25-a816-4d6b-8cb6-3b42535adcf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bfa2099c-6be5-4af1-80a5-4c3d54a539de</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5b8d2a6-2ef7-4567-b6f6-ca83bb4eb683</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3e9d0314-3835-453c-b307-b6e67a3ce754</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>LogFolder</con:name><con:value/></con:property><con:property><con:name>ExcelReport</con:name><con:value>COP-Report.xls</con:value></con:property><con:property><con:name>DB_Connection_URL</con:name><con:value>jdbc:postgresql://192.168.12.172:5433/cop_main_test</con:value></con:property><con:property><con:name>DB_loginname</con:name><con:value>postgres</con:value></con:property><con:property><con:name>DB_Password</con:name><con:value>postgres</con:value></con:property><con:property><con:name>DB_Driver_Class</con:name><con:value>org.postgresql.Driver</con:value></con:property><con:property><con:name>DB_Permission_Connection_URL</con:name><con:value>jdbc:postgresql://192.168.12.172:5433/cop_permission_test</con:value></con:property></con:properties><con:setupScript/><con:tearDownScript>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content,isFormula){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(isFormula==1){  
			Formula f = new Formula(column,row,content);  
			ws.addCell(f);
		}else{
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
		}
}
def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
def xlsName = context.expand('${#TestSuite#ExcelReport}');
statisticsSheetName = "Result";

try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,statisticsSheetName,14,0,"Pass",0);
updateOutput(writableWorkbook,statisticsSheetName,15,0,"Fail",0);
updateOutput(writableWorkbook,statisticsSheetName,16,0,"Total",0);
updateOutput(writableWorkbook,statisticsSheetName,13,1,"Number",0);
updateOutput(writableWorkbook,statisticsSheetName,13,2,"Percentage",0);
passNumFormula = "COUNTIF(E2:E${flag},\"Pass\")"
failNumFormula = "COUNTIF(E2:E${flag},\"Fail\")"
updateOutput(writableWorkbook,statisticsSheetName,14,1,passNumFormula,1);
updateOutput(writableWorkbook,statisticsSheetName,15,1,failNumFormula,1);
updateOutput(writableWorkbook,statisticsSheetName,16,1,"SUM(O2:P2)",1);
updateOutput(writableWorkbook,statisticsSheetName,14,2,"O2/Q2",1);
updateOutput(writableWorkbook,statisticsSheetName,15,2,"P2/Q2",1);
writableWorkbook.write();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}finally{
	writableWorkbook.close();
}
</con:tearDownScript><con:reportParameters/></con:testSuite><con:testSuite name="Permission"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="orderFirst" searchProperties="true" id="d7ea1f6d-2fd9-4d60-bf45-a8e36bc2b43d"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">234</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">234000</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">23400</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">235</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">235</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">23500</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">9999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">9999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">235</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">99999999999999999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">235</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">23500</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">9999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">aaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">23501</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">235</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">abccc!@#$%^&amp;*(</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">235</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">23500</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">aaaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-235</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">23500</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">235</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">23500</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00127</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">234</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">234000</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#ENT_ORDER_PKG_ADD_BATCH_ERR}</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>entId</con:property><con:property>entCode</con:property><con:property>id</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="orderFirst"><con:settings/><con:config service="Permission" resourcePath="/package/orderFirst" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="orderFirst" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:request>{
"entId":${DataSource#entId},
"entCode":${DataSource#entCode},
"packagesList":[{"id":${DataSource#id}}]
}
</con:request><con:originalUri>http://192.168.12.170/package/orderFirst</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" disabled="true"><con:settings/><con:config><script>import groovy.sql.Sql;
try{
	def DBProperties = testRunner.testCase.getTestSuite();
	def sql = Sql.newInstance(DBProperties.getPropertyValue("DB_Connection_URL"),DBProperties.getPropertyValue("DB_loginname"),DBProperties.getPropertyValue("DB_Password"),DBProperties.getPropertyValue("DB_Driver_Class"));
	try{
	def userid = sql.rows("select id from public.menu where name like '超人专用%'")
	log.info(userid.size())
	for(i=0;i&lt;userid.size();i++){
		id = userid[i].id
		try{
	def delrolemenu = sql.rows("delete from public.menu where id = '${id}'")	
		}catch(Exception e){
		log.info("del menu")
	}
	
	}

	}catch(Exception e){
		log.info("not found id")
	}

		log.info("del menus  done...")
}catch(Exception e){
	e.printStackTrace();
}

finally{
	try{ sql.close();log.info("close");}catch(Exception e){log.info("Final:"+e);}
}
</script></con:config></con:testStep><con:testStep type="groovy" name="output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>orderFirst</targetStep></con:config></con:testStep><con:setupScript>import groovy.sql.Sql;
try{
	def DBProperties = testRunner.testCase.getTestSuite();
	def sql = Sql.newInstance(DBProperties.getPropertyValue("DB_Connection_URL"),DBProperties.getPropertyValue("DB_loginname"),DBProperties.getPropertyValue("DB_Password"),DBProperties.getPropertyValue("DB_Driver_Class"));
	try{
	def roleId = sql.rows("select id from public.role where ent_id='234' and descr = '企业管理员角色'")
	id = roleId[0].id
	}catch(Exception e){
		log.info("not found id")
	}
	try{
	def delorder = sql.rows("delete from public.ent_order where ent_id = '234'")	
		}catch(Exception e){
		log.info("del order")
	}
	try{
	def delrole = sql.rows("delete from public.role where ent_id = '234'")	
		}catch(Exception e){
		log.info("del role")
	}
	try{
	def delrolemenu = sql.rows("delete from public.role_menu where role_id = '${id}'")	
		}catch(Exception e){
		log.info("del role menu")
	}
	try{
	def delrolemodel = sql.rows("delete from public.role_model where role_id = '${id}'")	
		}catch(Exception e){
		log.info("del role model")
	}
	try{
	def deluserrole = sql.rows("delete from public.user_role where role_id = '${id}'")	
		}catch(Exception e){
		log.info("del user role")
	}
	try{
	def delusers = sql.rows("delete from public.users where ent_id = '234' and nick_name = '企业管理员'")	
		}catch(Exception e){
		log.info("del users")
	}	
	log.info("del orders done...")
}catch(Exception e){
	e.printStackTrace();
}
finally{
	try{ sql.close();log.info("close");}catch(Exception e){log.info("Final:"+e);}
}</con:setupScript><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>669163c8-91ac-4cd6-9abe-9705c6d71eed</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="order" searchProperties="true" id="91e43c75-684f-4a94-a099-328d70a217be"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">237</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">235</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">9999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">235</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">9999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">aaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">235</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">aaaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-235</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">235</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#ENT_ORDER_PKG_ADD_BATCH_ERR}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">237</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#ENT_ORDER_PKG_ADD_BATCH_ERR}</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>entId</con:property><con:property>id</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="order"><con:settings/><con:config service="Permission" resourcePath="/package/order" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="order" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:request>{
"entId":${DataSource#entId},
"packagesList":[{"id":${DataSource#id}}]
}
</con:request><con:originalUri>http://192.168.12.170/package/order</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>order</targetStep></con:config></con:testStep><con:setupScript>import groovy.sql.Sql;
try{
	def DBProperties = testRunner.testCase.getTestSuite();
	def sql = Sql.newInstance(DBProperties.getPropertyValue("DB_Connection_URL"),DBProperties.getPropertyValue("DB_loginname"),DBProperties.getPropertyValue("DB_Password"),DBProperties.getPropertyValue("DB_Driver_Class"));
	
	try{
	def delorder = sql.rows("delete from public.ent_order where ent_id = '237'")	
		}catch(Exception e){
		log.info("del order")
	}
		
	log.info("del orders done...")
}catch(Exception e){
	e.printStackTrace();
}
finally{
	try{ sql.close();log.info("close");}catch(Exception e){log.info("Final:"+e);}
}</con:setupScript><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>98e98ed0-dff9-46e7-b651-d53a72f90b4c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="disOrder" searchProperties="true"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">237</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">235</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">9999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">235</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">9999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">aaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">235</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">aaaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-235</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">235</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00127</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">23333333</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#ENT_ORDER_PKG_DEL_BATCH_ERR}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">120</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">23</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#ENT_ORDER_PKG_DEL_BATCH_ERR}</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>entId</con:property><con:property>id</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="disOrder"><con:settings/><con:config service="Permission" resourcePath="/package/disOrder" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="disOrder" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:request>{
"entId":${DataSource#entId},
"packagesList":[{"id":${DataSource#id}}]
}
</con:request><con:originalUri>http://192.168.12.170/package/disOrder</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>disOrder</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>997e9aa7-48f8-4b8b-957d-e3a229b287da</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="roleAdd" searchProperties="true"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超级英雄，救人要紧</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">,"menuList":[{"id":1,"name":"菜单1"},{"id":2,"name":"菜单2"}],</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">"modelList":[{"id":1,"name":"模块1"},{"id":2,"name":"模块2"}]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">2</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人0001</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超级英雄，救人要紧</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">,"menuList":[{"id":1,"name":"菜单1"},{"id":2,"name":"菜单2"}],</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">"modelList":[{"id":1,"name":"模块1"},{"id":2,"name":"模块2"}]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">2</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超级英雄，救人要紧</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">,"menuList":[{"id":1,"name":"菜单1"},{"id":2,"name":"菜单2"}],</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">"modelList":[{"id":1,"name":"模块1"},{"id":2,"name":"模块2"}]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">2</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人0002</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超级英雄，救人要紧</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">,"menuList":[{"id":1,"name":"菜单1"},{"id":2,"name":"菜单2"}],</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">"modelList":[{"id":1,"name":"模块1"},{"id":2,"name":"模块2"}]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">2</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人0003</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">,"menuList":[{"id":1,"name":"菜单1"},{"id":2,"name":"菜单2"}],</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">"modelList":[{"id":1,"name":"模块1"},{"id":2,"name":"模块2"}]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">2</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人0004</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超级英雄，救人要紧</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">,</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">"modelList":[{"id":1,"name":"模块1"},{"id":2,"name":"模块2"}]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">2</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人0005</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超级英雄，救人要紧</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">,"menuList":[{"id":1,"name":"菜单1"},{"id":2,"name":"菜单2"}]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">2</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">aaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人0006</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超级英雄，救人要紧</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">,"menuList":[{"id":1,"name":"菜单1"},{"id":2,"name":"菜单2"}],</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">"modelList":[{"id":1,"name":"模块1"},{"id":2,"name":"模块2"}]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">2</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人0007</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超级英雄，救人要紧</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">,aaaa,</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">"modelList":[{"id":1,"name":"模块1"},{"id":2,"name":"模块2"}]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">2</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人0008</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超级英雄，救人要紧</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">,"menuList":[{"id":1,"name":"菜单1"},{"id":2,"name":"菜单2"}],</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">bbbb</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">2</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人0008</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超级英雄，救人要紧</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">,"menuList":[{"id":1,"name":"菜单1"},{"id":2,"name":"菜单2"}],</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">"modelList":[{"id":1,"name":"模块1"},{"id":2,"name":"模块2"}]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">abbb</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人0009</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超级英雄，救人要紧</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">,"menuList":[{"id":1,"name":"菜单1"},{"id":2,"name":"菜单2"}],</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">"modelList":[{"id":1,"name":"模块1"},{"id":2,"name":"模块2"}]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">2</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">23333</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人0010</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超级英雄，救人要紧</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">,"menuList":[{"id":1,"name":"菜单1"},{"id":2,"name":"菜单2"}],</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">"modelList":[{"id":1,"name":"模块1"},{"id":2,"name":"模块2"}]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">2</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_EXIST_ENTERPRISE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人0011</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超级英雄，救人要紧</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">,"menuList":[{"id":1,"name":"菜单1"},{"id":2,"name":"菜单2"}],</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">"modelList":[{"id":1,"name":"模块1"},{"id":2,"name":"模块2"}]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">-2</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人0012</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超级英雄，救人要紧</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">,"menuList":[{"id":1,"name":"菜单1"},{"id":2,"name":"菜单2"}],</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">"modelList":[{"id":1,"name":"模块1"},{"id":2,"name":"模块2"}]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">2333</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人0013</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超级英雄，救人要紧</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">,"menuList":[{"id":1,"name":"菜单1"},{"id":2,"name":"菜单2"}],</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">"modelList":[{"id":1,"name":"模块1"},{"id":2,"name":"模块2"}]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人0014</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超级英雄，救人要紧</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">,"menuList":[{"id":23333,"name":"菜单1"},{"id":244442,"name":"菜单2"}],</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">"modelList":[{"id":1,"name":"模块1"},{"id":2,"name":"模块2"}]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00113</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人0015</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超级英雄，救人要紧</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">,"menuList":[{"id":23333,"name":"菜单1"},{"id":2,"name":"菜单2"}],</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">"modelList":[{"id":1,"name":"模块1"},{"id":2,"name":"模块2"}]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00113</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人0016</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超级英雄，救人要紧</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">,"menuList":[{"id":23333,"name":"菜单1"},{"id":2,"name":"菜单2"}],</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">"modelList":[{"id":1333222,"name":"模块1"},{"id":2,"name":"模块2"}]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00115</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人0017</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超级英雄，救人要紧</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">,"menuList":[{"id":23333,"name":"菜单1"},{"id":2,"name":"菜单2"}],</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">"modelList":[{"id":1333222,"name":"模块1"},{"id":2342342,"name":"模块2"}]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00115</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">12312312399</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人0018</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超级英雄，救人要紧</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">,"menuList":[{"id":1,"name":"菜单1"},{"id":2,"name":"菜单2"}],</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">"modelList":[{"id":1,"name":"模块1"},{"id":2,"name":"模块2"}]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">2</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超级英雄，救人要紧</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">,"menuList":[{"id":1,"name":"菜单1"},{"id":2,"name":"菜单2"}],</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">"modelList":[{"id":1,"name":"模块1"},{"id":2,"name":"模块2"}]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">2</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00102</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>entId</con:property><con:property>name</con:property><con:property>descr</con:property><con:property>menu</con:property><con:property>model</con:property><con:property>type</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="roleAdd"><con:settings/><con:config service="Permission" resourcePath="/role/add" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="roleAdd" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:request>{
"entId":${DataSource#entId},
"name":${DataSource#name},
"descr":${DataSource#descr}
${DataSource#menu}
${DataSource#model}
}
</con:request><con:originalUri>http://192.168.12.170/role/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>roleAdd</targetStep></con:config></con:testStep><con:setupScript>import groovy.sql.Sql;
try{
	def DBProperties = testRunner.testCase.getTestSuite();
	def sql = Sql.newInstance(DBProperties.getPropertyValue("DB_Connection_URL"),DBProperties.getPropertyValue("DB_loginname"),DBProperties.getPropertyValue("DB_Password"),DBProperties.getPropertyValue("DB_Driver_Class"));
	try{
	def roleId = sql.rows("select id from public.role where name like '超人%'")
	log.info(roleId.size())
	for(i=0;i&lt;roleId.size();i++){
		id = roleId[i].id
		try{
	def delrolemenu = sql.rows("delete from public.role_menu where role_id = '${id}'")	
		}catch(Exception e){
		log.info("del role menu")
	}
	try{
	def delrolemodel = sql.rows("delete from public.role_model where role_id = '${id}'")	
		}catch(Exception e){
		log.info("del role model")
	}
	}
try{
	def delorder = sql.rows("delete from public.role where name like '超人%'")	
		}catch(Exception e){
		log.info("del role")
		}
	}catch(Exception e){
		log.info("not found id")
	}

		log.info("del orders done...")
}catch(Exception e){
	e.printStackTrace();
}

finally{
	try{ sql.close();log.info("close");}catch(Exception e){log.info("Final:"+e);}
}
</con:setupScript><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8c8f7c06-0571-4e20-8bf4-6b8cc7d9cdd3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="roleUpdate" searchProperties="true"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">50</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试6666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">66666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">, "menuList":[{"id":3,"name":"菜单3"},{"id":2,"name":"菜单2"}],</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">"modelList":[{"id":3,"name":"模块3"},{"id":2,"name":"模块2"}]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">50</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试6666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">66666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">, "menuList":[{"id":3,"name":"菜单3"},{"id":2,"name":"菜单2"}],</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">"modelList":[{"id":3,"name":"模块3"},{"id":2,"name":"模块2"}]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00102</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试66661</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">666661</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">, "menuList":[{"id":3,"name":"菜单3"},{"id":2,"name":"菜单2"}],</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">"modelList":[{"id":3,"name":"模块3"},{"id":2,"name":"模块2"}]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">50</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">666662</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">, "menuList":[{"id":3,"name":"菜单3"},{"id":2,"name":"菜单2"}],</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">"modelList":[{"id":3,"name":"模块3"},{"id":2,"name":"模块2"}]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">50</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试66662</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">, "menuList":[{"id":3,"name":"菜单3"},{"id":2,"name":"菜单2"}],</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">"modelList":[{"id":3,"name":"模块3"},{"id":2,"name":"模块2"}]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">50</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试66663</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">666663</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">,</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">"modelList":[{"id":1,"name":"模块3"},{"id":2,"name":"模块2"}]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">50</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试66664</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">666664</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">, "menuList":[{"id":1,"name":"菜单3"}]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">50</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试66665</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">666665</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">, "menuList":null,</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">"modelList":null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">aaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试66666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">666666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">, "menuList":null,</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">"modelList":null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">50</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试66667</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">666667</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">, "menuList":aaaa,</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">"modelList":null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">50</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试66668</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">666668</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">, "menuList":aaaa,</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">"modelList":bbb</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-50</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试66669</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">666669</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">, "menuList":null,</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">"modelList":null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">50</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试66660</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">666660</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">, "menuList":[{"id":-1,"name":"菜单3"}]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">"modelList":null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">50</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试9999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">99999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">, "menuList":[{"id":3,"name":"菜单3"}],</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">"modelList":[{"id":1,"name":"模块3"}]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">5555</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试55555</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">5555</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">, "menuList":[{"id":3,"name":"菜单3"}],</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">"modelList":[{"id":1,"name":"模块3"}]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00105</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>id</con:property><con:property>name</con:property><con:property>descr</con:property><con:property>menu</con:property><con:property>model</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="roleUpdate"><con:settings/><con:config service="Permission" resourcePath="/role/update" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="roleUpdate" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:request>{
"id":${DataSource#id},
"name":${DataSource#name},
"descr":${DataSource#descr}
${DataSource#menu}
${DataSource#model}
}
</con:request><con:originalUri>http://192.168.12.170/role/update</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>roleUpdate</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>db32dcf8-81c2-41d5-94ed-7904055f7829</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="roleDelete" searchProperties="true"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">50</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">aaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">!@#$%</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-50</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">999999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">50</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">70123123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>id</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="roleDelete"><con:settings/><con:config service="Permission" resourcePath="/role/delete" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="roleDelete" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:request>{
"id":${DataSource#id}
}</con:request><con:originalUri>http://192.168.12.170/role/delete</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>roleDelete</targetStep></con:config></con:testStep><con:setupScript>import groovy.sql.Sql;
try{
	def DBProperties = testRunner.testCase.getTestSuite();
	def sql = Sql.newInstance(DBProperties.getPropertyValue("DB_Connection_URL"),DBProperties.getPropertyValue("DB_loginname"),DBProperties.getPropertyValue("DB_Password"),DBProperties.getPropertyValue("DB_Driver_Class"));
	
	try{
	def updatestatus = sql.rows("update public.role set status = '1' where id = '50'")
		}catch(Exception e){
		log.info("status updated")
	}
		
	log.info("status changed to 1...")
}catch(Exception e){
	e.printStackTrace();
}
finally{
	try{ sql.close();log.info("close");}catch(Exception e){log.info("Final:"+e);}
}</con:setupScript><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>2afc1619-08d9-47a8-bbef-617fdf8cafd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="roleQueryAll" searchProperties="true"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">aaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">!@#$%</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-50</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">999999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">70123123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>entId</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="roleQueryAll"><con:settings/><con:config service="Permission" resourcePath="/role/queryAll" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="roleQueryAll" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:request>{
"entId":${DataSource#entId}
}</con:request><con:originalUri>http://192.168.12.170/role/queryAll</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>roleQueryAll</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>c3a700d6-fed7-448c-b943-04862c766268</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="roleQueryUserRole" searchProperties="true"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">aaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">!@#$%</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-50</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">999999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">70123123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>userId</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="roleQueryUserRole"><con:settings/><con:config service="Permission" resourcePath="/role/queryUserRole" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="roleQueryUserRole" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:request>{
"userId":${DataSource#userId}
}</con:request><con:originalUri>http://192.168.12.170/role/queryUserRole</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>roleQueryUserRole</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>96c71d99-2e59-4843-b3d6-64428e0f80d8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="roleGet" searchProperties="true"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">23</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">aaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">!@#$%</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-50</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">999999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">70123123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>id</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="roleGet"><con:settings/><con:config service="Permission" resourcePath="/role/get/{id}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="roleGet" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:request/><con:originalUri>http://192.168.12.170/role/get</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="${DataSource#id}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>id</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>roleGet</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>6e5f29b2-08bc-407d-a47c-a83748ff33ce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="userAdd" searchProperties="true" id="8052b39b-17a9-4d5b-bbd0-f0fea8a9eaa0"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">lizhitest666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">lizhitest666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">18666666666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">18666666666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">lizhitest666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">lizhitest666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">18666666666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">18666666666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00102</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">lizhitest667</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">lizhitest666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">18666666666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">18666666666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">lizhitest666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">18666666666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">18666666666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">lizhitest667</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">18666666666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">18666666666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">lizhitest667</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">lizhitest666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">18666666666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">lizhitest667</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">lizhitest666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">18666666666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">lizhitest668</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">lizhitest668</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">18666666668</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">18666666668</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123456</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">lizhitest669</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">lizhitest666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">18666666669</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">18666666669</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_EXIST_ENTERPRISE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">aaaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">lizhitest670</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">lizhitest666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">18666666670</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">18666666670</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">lizhitest670</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">lizhitest666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">18666666670</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">18666666670</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">!@#$%^&amp;*(</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">lizhitest670</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">lizhitest666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">18666666670</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">18666666670</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">9999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">lizhitest670</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">lizhitest666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">18666666670</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">18666666670</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">lizhitest671</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">lizhitest666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">aaaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">18666666670</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">lizhitest672</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">lizhitest666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">18666666672</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">bbbbbbbbb</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>entId</con:property><con:property>userName</con:property><con:property>passWord</con:property><con:property>mdn</con:property><con:property>callMdn</con:property><con:property>nickName</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="userAdd"><con:settings/><con:config service="Permission" resourcePath="/user/add" methodName="Add" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="userAdd" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:request>{
"entId":${DataSource#entId},
"userName":${DataSource#userName},
"passWord":${DataSource#passWord},
"mdn":${DataSource#mdn},
"callMdn":${DataSource#callMdn},
"nickName":${DataSource#nickName}
}</con:request><con:originalUri>http://192.168.12.170/user/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>userAdd</targetStep></con:config></con:testStep><con:setupScript>import groovy.sql.Sql;
try{
	def DBProperties = testRunner.testCase.getTestSuite();
	def sql = Sql.newInstance(DBProperties.getPropertyValue("DB_Connection_URL"),DBProperties.getPropertyValue("DB_loginname"),DBProperties.getPropertyValue("DB_Password"),DBProperties.getPropertyValue("DB_Driver_Class"));
	try{
	def userid = sql.rows("select id from public.users where user_name like 'lizhitest%'")
	log.info(userid.size())
	for(i=0;i&lt;userid.size();i++){
		id = userid[i].id
		try{
	def delrolemenu = sql.rows("delete from public.users where id = '${id}'")	
		}catch(Exception e){
		log.info("del user")
	}
	
	}

	}catch(Exception e){
		log.info("not found id")
	}

		log.info("del users  done...")
}catch(Exception e){
	e.printStackTrace();
}

finally{
	try{ sql.close();log.info("close");}catch(Exception e){log.info("Final:"+e);}
}
</con:setupScript><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>c6878d7e-4398-4093-b3bd-5e88a9812334</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7c47460f-5915-4047-94f4-fe034d2e72c7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="userUpdatePassword" searchProperties="true"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">55</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123456</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">woca</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">55</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123456</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">woca</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00120</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">5555555</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123456</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">woca</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00120</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123456</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">woca</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">55</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">wocalei</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">55</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">woca</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">aaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">woca</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">wocalei</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-55</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">woca</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">wocalei</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">555555555555555555</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">woca</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">wocalei</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">55</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">55555555555555555</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">wocalei</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">55</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">woca</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">wocaleiwocalei wocalei wocalei wocalei </con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>id</con:property><con:property>passWord</con:property><con:property>passwordNew</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="userUpdatePassword"><con:settings/><con:config service="Permission" resourcePath="/user/updatePassword" methodName="updatePassword" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="userUpdatePassword" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:request>{
"id":${DataSource#id},
"password":${DataSource#passWord},
"passwordNew":${DataSource#passwordNew}
}</con:request><con:originalUri>http://192.168.12.170/user/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>userUpdatePassword</targetStep></con:config></con:testStep><con:setupScript>import groovy.sql.Sql;
try{
	def DBProperties = testRunner.testCase.getTestSuite();
	def sql = Sql.newInstance(DBProperties.getPropertyValue("DB_Connection_URL"),DBProperties.getPropertyValue("DB_loginname"),DBProperties.getPropertyValue("DB_Password"),DBProperties.getPropertyValue("DB_Driver_Class"));



		try{
	def resetpswd = sql.rows("update public.users set password = 'e10adc3949ba59abbe56e057f20f883e' where id = '55'")	
		}catch(Exception e){
		log.info("reset password")
	}
	
	


		log.info("reset pasword for id=55 done...")
}catch(Exception e){
	e.printStackTrace();
}

finally{
	try{ sql.close();log.info("close");}catch(Exception e){log.info("Final:"+e);}
}
</con:setupScript><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>bcd85f77-2c1c-485b-99c1-f4f8f651bab8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>25f1df4b-7be9-4856-aa85-d6cd6ebee236</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="userUpdateNickName" searchProperties="true"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">55</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">呵呵哒</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">55555511</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">呵呵哒</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">呵呵哒</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">55</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-55</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">呵呵哒</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">aaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">呵呵哒</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">555555555555555555555</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">呵呵哒</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">55</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">"!@#$%^&amp;*()"</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>id</con:property><con:property>nickName</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="userUpdateNickName"><con:settings/><con:config service="Permission" resourcePath="/user/updateNickName" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="userUpdateNickName" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:request>{
"id":${DataSource#id},
"nickName":${DataSource#nickName}
}
</con:request><con:originalUri>http://192.168.12.170/user/updateNickName</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>userUpdateNickName</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>432e00d7-32a0-4009-b64b-6e7ac38ffbb5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="userResetPassword" searchProperties="true"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">55</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">55523423</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123123123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">55</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-55</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">55</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">-123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">aaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">55</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">aaaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">555555555555555555</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">55</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123123123123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>id</con:property><con:property>entId</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="userResetPassword"><con:settings/><con:config service="Permission" resourcePath="/user/resetPassword" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="userResetPassword" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:request>{
"id":${DataSource#id},
"entId":${DataSource#entId}
}
</con:request><con:originalUri>http://192.168.12.170/user/resetPassword</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>userResetPassword</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>cef2327f-ad1e-49d8-8617-adced8bf20d3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="userDelete" searchProperties="true"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">99999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">99999999999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">aaaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">!@#$%^&amp;</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>id</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="userDelete"><con:settings/><con:config service="Permission" resourcePath="/user/delete" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="userDelete" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:request>{
"id":${DataSource#id}
}
</con:request><con:originalUri>http://192.168.12.170/user/delete</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>userDelete</targetStep></con:config></con:testStep><con:setupScript>import groovy.sql.Sql;
try{
	def DBProperties = testRunner.testCase.getTestSuite();
	def sql = Sql.newInstance(DBProperties.getPropertyValue("DB_Connection_URL"),DBProperties.getPropertyValue("DB_loginname"),DBProperties.getPropertyValue("DB_Password"),DBProperties.getPropertyValue("DB_Driver_Class"));
	
	try{
	def updatestatus = sql.rows("update public.users set status = '1' where id = '111'")
		}catch(Exception e){
		log.info("status updated")
	}
		
	log.info("status changed to 0...")
}catch(Exception e){
	e.printStackTrace();
}
finally{
	try{ sql.close();log.info("close");}catch(Exception e){log.info("Final:"+e);}
}</con:setupScript><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>edc4e012-6997-43f3-bac3-049f3583824b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="userQueryAllByPage" searchProperties="true"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">3</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">3</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">3</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">3</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1233312312</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">30</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">30</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">-10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">aaaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">3</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">aaaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">3</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">aaaav</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">999999999999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">3</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">999999999999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">3</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">999999999999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>entId</con:property><con:property>currPage</con:property><con:property>recNumPerPage</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="userQueryAllByPage"><con:settings/><con:config service="Permission" resourcePath="/user/queryAllByPage" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="userQueryAllByPage" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:request>{
"entId":${DataSource#entId},
"currPage":${DataSource#currPage},
"recNumPerPage":${DataSource#recNumPerPage}
}</con:request><con:originalUri>http://192.168.12.170/user/queryAllByPage</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>userQueryAllByPage</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>fccf759a-c649-4540-aa6b-ef1256176682</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="userGet" searchProperties="true"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">55</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">99999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">99999999999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">aaaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">"!@#$%^&amp;"</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>id</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="userGet"><con:settings/><con:config service="Permission" resourcePath="/user/get/{id}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="userGet" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:request/><con:originalUri>http://192.168.12.170/user/get/1</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="${DataSource#id}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>id</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>userGet</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>e25e93d0-5f15-4e58-93db-e8cdeeab02a8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="userAddRole" searchProperties="true"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">55</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">23</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">23</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">55</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">555554321</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">23</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-55</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">23</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">55</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">4321</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">55</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">-4321</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">555555555555555555555</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">23</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">55</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">233333333333333333333</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">aaaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">23</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">55</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">aa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">55</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">23</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>userId</con:property><con:property>roleId</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="userAddRole"><con:settings/><con:config service="Permission" resourcePath="/user/addRole" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="userAddRole" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:request>{
"userId":${DataSource#userId},
"roleId":${DataSource#roleId}
}
</con:request><con:originalUri>http://192.168.12.170/user/addRole</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>userAddRole</targetStep></con:config></con:testStep><con:setupScript>import groovy.sql.Sql;
try{
	def DBProperties = testRunner.testCase.getTestSuite();
	def sql = Sql.newInstance(DBProperties.getPropertyValue("DB_Connection_URL"),DBProperties.getPropertyValue("DB_loginname"),DBProperties.getPropertyValue("DB_Password"),DBProperties.getPropertyValue("DB_Driver_Class"));
	try{
	def delrole = sql.rows("delete from public.user_role where user_id =  '55'")


	}catch(Exception e){
		log.info("del user role")
	}

		log.info("del user role  done...")
}catch(Exception e){
	e.printStackTrace();
}

finally{
	try{ sql.close();log.info("close");}catch(Exception e){log.info("Final:"+e);}
}
</con:setupScript><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>d6dbfdd3-6b09-423c-938d-f8191467674c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="userAddRoleByMdn" searchProperties="true"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">17310920237</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">27</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">23</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">17310920237</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">555554321</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">23</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-55</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">23</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">17310920237</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">4321</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">17310920237</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">-4321</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">555555555555555555555</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">23</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">17310920237</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">233333333333333333333</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">aaaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">23</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">17310920237</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">aa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">17310920237</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">27</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>mdn</con:property><con:property>roleId</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="userAddRoleByMdn"><con:settings/><con:config service="Permission" resourcePath="/user/addRoleByMdn" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="userAddRoleByMdn" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:request>{
"mdn":${DataSource#mdn},
"roleId":${DataSource#roleId}
}
</con:request><con:originalUri>http://192.168.12.170/user/addRoleByMdn</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>userAddRoleByMdn</targetStep></con:config></con:testStep><con:setupScript/><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>e3716a27-8732-4d3d-8495-7c1382c8489d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="userDelRoleByMdn" searchProperties="true"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">17310920237</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">27</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">23</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">17310920237</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">555554321</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">23</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-55</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">23</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">17310920237</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">4321</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">17310920237</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">-4321</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">555555555555555555555</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">23</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">17310920237</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">233333333333333333333</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">aaaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">23</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">17310920237</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">aa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">17310920237</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">27</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>mdn</con:property><con:property>roleId</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="userDelRoleByMdn"><con:settings/><con:config service="Permission" resourcePath="/user/delRoleByMdn" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="userDelRoleByMdn" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:request>{
"mdn":${DataSource#mdn},
"roleId":${DataSource#roleId}
}
</con:request><con:originalUri>http://192.168.12.170/user/delRoleByMdn</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>userDelRoleByMdn</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>f6a16216-b211-4416-acb5-1bca3388e977</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="userCheck" searchProperties="true" id="2859b656-3605-4cf5-b06c-c3c5b1ebbc24"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">yaoqiang</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">admin</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00102</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">"!@#$%^&amp;*()"</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">嘿</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">"name blank"</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>userName</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="userCheck"><con:settings/><con:config service="Permission" resourcePath="/user/check" methodName="userCheck" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="userCheck" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:request>{
"userName":${DataSource#userName}
}</con:request><con:originalUri>http://192.168.12.170/user/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>userCheck</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>201b093e-e8c5-4f66-9118-b940b60fbf0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="menuAdd" searchProperties="true" id="501b2289-9398-4339-b74f-b7aa80de9942"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人专用001</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">66666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">www.baidu.com</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人专用002</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">66667</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">www.baidu.com</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">66668</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">www.baidu.com</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人专用004</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">www.baidu.com</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人专用005</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">66660</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人专用006</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">66661</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">www.baidu.com</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人专用007</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">66662</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">www.baidu.com</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人专用008</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">66663</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">www.baidu.com</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人专用001</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">66664</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">www.baidu.com</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00102</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人专用009</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">66666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">www.baidu.com</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00109</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">6666666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人专用010</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">66665</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">www.baidu.com</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_EXIST_ENTERPRISE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人专用011</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">666661</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">www.baidu.com</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">66666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">model不存在</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人专用012</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">666662</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">www.baidu.com</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">666666666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00107</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人专用013</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">666663</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">www.baidu.com</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">23333333</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">type不存在</con:entry></xml-fragment>]]></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config"/></row></con:configuration></con:dataSource><con:property>entId</con:property><con:property>name</con:property><con:property>oid</con:property><con:property>url</con:property><con:property>modelId</con:property><con:property>type</con:property><con:property>parentId</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="menuAdd"><con:settings/><con:config service="Permission" resourcePath="/menu/add" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="menuAdd" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:request>{
"entId":${DataSource#entId},
"name":${DataSource#name},
"oid":${DataSource#oid},
"url":${DataSource#url},
"modelId":${DataSource#modelId},
"parentId":${DataSource#parentId},
"type":${DataSource#type}
}
</con:request><con:originalUri>http://192.168.12.170/menu/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>menuAdd</targetStep></con:config></con:testStep><con:setupScript>import groovy.sql.Sql;
try{
	def DBProperties = testRunner.testCase.getTestSuite();
	def sql = Sql.newInstance(DBProperties.getPropertyValue("DB_Connection_URL"),DBProperties.getPropertyValue("DB_loginname"),DBProperties.getPropertyValue("DB_Password"),DBProperties.getPropertyValue("DB_Driver_Class"));
	try{
	def userid = sql.rows("select id from public.menu where name like '超人专用%'")
	log.info(userid.size())
	for(i=0;i&lt;userid.size();i++){
		id = userid[i].id
		try{
	def delrolemenu = sql.rows("delete from public.menu where id = '${id}'")	
		}catch(Exception e){
		log.info("del menu")
	}
	
	}

	}catch(Exception e){
		log.info("not found id")
	}

		log.info("del menus  done...")
}catch(Exception e){
	e.printStackTrace();
}

finally{
	try{ sql.close();log.info("close");}catch(Exception e){log.info("Final:"+e);}
}
</con:setupScript><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>d63fb655-4190-4eb3-bce4-441c6d93dc20</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="menuUpdate" searchProperties="true"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人专用001</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">66666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">www.baidu.com</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人专用002</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">66667</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">www.baidu.com</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">66668</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">www.baidu.com</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人专用004</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">www.baidu.com</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人专用005</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">66660</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人专用006</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">66661</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">www.baidu.com</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人专用007</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">66662</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">www.baidu.com</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人专用008</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">66663</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">www.baidu.com</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人专用001</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">66664</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">www.baidu.com</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00102</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人专用009</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">66666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">www.baidu.com</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00109</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">6666666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人专用010</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">66665</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">www.baidu.com</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_EXIST_ENTERPRISE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人专用011</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">666661</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">www.baidu.com</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">66666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">model不存在</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人专用012</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">666662</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">www.baidu.com</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">666666666</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00107</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">超人专用013</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">666663</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">www.baidu.com</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">23333333</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">type不存在</con:entry></xml-fragment>]]></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config"/></row></con:configuration></con:dataSource><con:property>id</con:property><con:property>name</con:property><con:property>oid</con:property><con:property>url</con:property><con:property>modelId</con:property><con:property>type</con:property><con:property>parentId</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="menuUpdate"><con:settings/><con:config service="Permission" resourcePath="/menu/update" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="menuUpdate" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:request>{
"id":${DataSource#id},
"name":${DataSource#name},
"oid":${DataSource#oid},
"url":${DataSource#url},
"modelId":${DataSource#modelId}.
"parentId":${DataSource#parentId},
"type":${DataSource#type}
}
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>menuUpdate</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>aaac2ee3-9dab-4a9c-97b5-5570984e7fec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="menuDelete" searchProperties="true"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00001</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">000</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">aaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1111111111111111111111111111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>id</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="menuDelete"><con:settings/><con:config service="Permission" resourcePath="/menu/delete" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="menuDelete" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:request>{
"id":${DataSource#id}
}
</con:request><con:originalUri>http://192.168.12.170/menu/delete</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>menuDelete</targetStep></con:config></con:testStep><con:setupScript>import groovy.sql.Sql;
try{
	def DBProperties = testRunner.testCase.getTestSuite();
	def sql = Sql.newInstance(DBProperties.getPropertyValue("DB_Connection_URL"),DBProperties.getPropertyValue("DB_loginname"),DBProperties.getPropertyValue("DB_Password"),DBProperties.getPropertyValue("DB_Driver_Class"));
	
	try{
	def updatestatus = sql.rows("update public.menu set status = '1' where id = '10'")
		}catch(Exception e){
		log.info("status updated")
	}
		
	log.info("status changed to 1...")
}catch(Exception e){
	e.printStackTrace();
}
finally{
	try{ sql.close();log.info("close");}catch(Exception e){log.info("Final:"+e);}
}</con:setupScript><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>7f83582b-8253-4e01-8d97-75fca0ca27d4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="menuQueryMenuRole" searchProperties="true" disabled="true"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">000</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">aaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">1111111111111111111111111111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">"!@#$%^&amp;*()"</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row>&lt;xml-fragment>&lt;con:entry xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">00002&lt;/con:entry>&lt;/xml-fragment></row></con:configuration></con:dataSource><con:property>id</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="menuQueryMenuRole"><con:settings/><con:config service="Permission" resourcePath="/menu/queryMenuRole/{id}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="menuQueryMenuRole" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:request/><con:originalUri>http://192.168.12.170/menu/queryMenuRole/1</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="${DataSource#id}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>id</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>menuQueryMenuRole</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>adc11a86-e9fd-43e3-abb6-9b749470d526</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="menuQuery" searchProperties="true"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">89789827</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_EXIST_ENTERPRISE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">999999999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">aaaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">0</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">!@#$%^&amp;*()</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>entId</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="menuQuery"><con:settings/><con:config service="Permission" resourcePath="/menu/query" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="menuQuery" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:request>{
"entId":${DataSource#entId}
}</con:request><con:originalUri>http://192.168.12.170/menu/query</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>menuQuery</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>9085813f-e902-4411-8d49-879bc152e432</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="menuQueryAll" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="menuQueryAll"><con:settings/><con:config service="Permission" resourcePath="/model/queryAll" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="menuQueryAll" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:request/><con:originalUri>http://192.168.12.170/model/queryAll</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}


def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps["${testcase.name}"].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = "00000"
//def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=1;
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="modelQueryByRole" searchProperties="true"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">24</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">45464564</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00105</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row>&lt;xml-fragment>&lt;con:entry xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">00002&lt;/con:entry>&lt;/xml-fragment></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">aaaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">11111111111111111111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-99999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">!@#$%^&amp;*()</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">"!@#$%^&amp;*()"</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>roleId</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="modelQueryByRole"><con:settings/><con:config service="Permission" resourcePath="/model/queryByRole/{roleId}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="modelQueryByRole" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:request/><con:originalUri>http://192.168.12.170/model/queryByRole</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="roleId" value="${DataSource#roleId}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>roleId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>modelQueryByRole</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>94e7e800-934d-42aa-9998-d4e5a85cfda7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="authLogin" searchProperties="true"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">admin10000</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123456</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">admin10000</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123321</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00101</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">nonexistuser</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">nonexistuser</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00100</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">admin10000</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123456</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">[!@#$%^&amp;]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123456</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">admin10000</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">[!@#$%^&amp;]</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123456</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00100</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>username</con:property><con:property>password</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="authLogin"><con:settings/><con:config service="Permission" resourcePath="/auth/login" methodName="auth/login" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="authLogin" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:request>{
"userName":${DataSource#username},
"password":${DataSource#password}
}
</con:request><con:originalUri>http://192.168.12.170/user/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>authLogin</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>26a0d6df-d307-42d2-9cb9-bb4e5a6799d2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="authGetCapcha" searchProperties="true"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">17310920237</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">17310920237</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">2</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00134</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">17310920237</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">0</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00134</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">17310920237</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">3</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00134</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">17310920237</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00134</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">17310920237</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">aaaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">17310920237</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">aaaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">11111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-1111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">99999999999999999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>mdn</con:property><con:property>type</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="authGetCapcha"><con:settings/><con:config service="Permission" resourcePath="/auth/getCaptcha" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="authGetCapcha" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:request>{
"mdn":${DataSource#mdn},
"type":${DataSource#type}
}
</con:request><con:originalUri>http://192.168.12.170/auth/getCaptcha</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>authGetCapcha</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>dc5867c3-e8b4-45bb-a3b9-7cb30367050b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="authLoginApp" searchProperties="true"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">13911604453</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">123123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>mdn</con:property><con:property>type</con:property><con:property>vericode</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="authLoginApp"><con:settings/><con:config service="Permission" resourcePath="/auth/loginApp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="authLoginApp" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.170:10001</con:endpoint><con:request>{
"mdn":${DataSource#mdn},
"type":2,
"vercode":""
}</con:request><con:originalUri>http://192.168.12.170/auth/loginApp</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>authLoginApp</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>2b7e98eb-9948-48cf-924d-52e93bbaf6e2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>LogFolder</con:name><con:value/></con:property><con:property><con:name>DB_Connection_URL</con:name><con:value>jdbc:postgresql://192.168.12.172:5433/cop_permission_test</con:value></con:property><con:property><con:name>DB_loginname</con:name><con:value>postgres</con:value></con:property><con:property><con:name>DB_Password</con:name><con:value>postgres</con:value></con:property><con:property><con:name>DB_Driver_Class</con:name><con:value>org.postgresql.Driver</con:value></con:property><con:property><con:name>ExcelReport</con:name><con:value>COP-Report.xls</con:value></con:property></con:properties><con:setupScript/><con:tearDownScript>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content,isFormula){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(isFormula==1){  
			Formula f = new Formula(column,row,content);  
			ws.addCell(f);
		}else{
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
		}
}
def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
def xlsName = context.expand('${#TestSuite#ExcelReport}');
statisticsSheetName = "Result";

try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,statisticsSheetName,14,0,"Pass",0);
updateOutput(writableWorkbook,statisticsSheetName,15,0,"Fail",0);
updateOutput(writableWorkbook,statisticsSheetName,16,0,"Total",0);
updateOutput(writableWorkbook,statisticsSheetName,13,1,"Number",0);
updateOutput(writableWorkbook,statisticsSheetName,13,2,"Percentage",0);
passNumFormula = "COUNTIF(E2:E${flag},\"Pass\")"
failNumFormula = "COUNTIF(E2:E${flag},\"Fail\")"
updateOutput(writableWorkbook,statisticsSheetName,14,1,passNumFormula,1);
updateOutput(writableWorkbook,statisticsSheetName,15,1,failNumFormula,1);
updateOutput(writableWorkbook,statisticsSheetName,16,1,"SUM(O2:P2)",1);
updateOutput(writableWorkbook,statisticsSheetName,14,2,"O2/Q2",1);
updateOutput(writableWorkbook,statisticsSheetName,15,2,"P2/Q2",1);
writableWorkbook.write();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}finally{
	writableWorkbook.close();
}
</con:tearDownScript><con:reportParameters/></con:testSuite><con:testSuite name="Message"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="messageAddLoad" searchProperties="true" disabled="true"><con:settings/><con:testStep type="restrequest" name="messageAddLoad"><con:settings/><con:config service="Message" resourcePath="/message/add" methodName="method1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="messageAddLoad" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request/><con:originalUri>http://192.168.12.170/message/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}


def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps["${testcase.name}"].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = "00000"
//def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=1;
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="messageAdd" searchProperties="true" id="b30ec7ae-e66e-4517-a6d2-3bdf5ce8b1d5"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">2</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">cffc6b5609244b63b5a42e9e707d4bf1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">今天天气不错</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">zstestent01655</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">18001275149</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">8</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">2</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">cffc6b5609244b63b5a42e9e707d4bf1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">测试测试</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">111</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">13370166157</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>userId</con:property><con:property>entId</con:property><con:property>entKey</con:property><con:property>content</con:property><con:property>recName</con:property><con:property>terminal</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="messageAdd"><con:settings/><con:config service="Message" resourcePath="/message/add" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="messageAdd" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request>{
"userId":${DataSource#userId},
"entId":${DataSource#entId},
"entKey":${DataSource#entKey},
"content":${DataSource#content},
"receivers":[
	{
	"recName":${DataSource#recName},
	"terminal":${DataSource#terminal}
	}
]
}</con:request><con:originalUri>http://192.168.12.170/message/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>messageAdd</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>879ac26b-2a4b-4552-9fe0-cb48bc4d85a6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="smsQueryLoad" searchProperties="true" disabled="true"><con:settings/><con:testStep type="restrequest" name="smsQueryLoad"><con:settings/><con:config service="Message" resourcePath="/message/query" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="smsQueryLoad" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request/><con:originalUri>http://192.168.12.170/message/query</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}


def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps["${testcase.name}"].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = "00000"
//def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=1;
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="smsQuery" searchProperties="true"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">2</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">2016-10-10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">2017-10-15</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">zs</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">天气</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">20</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>userId</con:property><con:property>entId</con:property><con:property>startDate</con:property><con:property>endDate</con:property><con:property>receiver</con:property><con:property>content</con:property><con:property>currPagge</con:property><con:property>recNumPerPage</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="smsQuery"><con:settings/><con:config service="Message" resourcePath="/message/query" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="smsQuery" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request>{
"userId":${DataSource#userId},
"entId":${DataSource#entId},
"startDate":${DataSource#startDate},
"endDate":${DataSource#endDate},
"receiver":${DataSource#receiver},
"content":${DataSource#content}, 
"currPage":${DataSource#currPagge}, 
"recNumPerPage":${DataSource#recNumPerPage}
}</con:request><con:originalUri>http://192.168.12.170/message/query</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>smsQuery</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>dcd603e2-2b3f-4561-abc1-a64136d1c8bf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="messageGet" searchProperties="true" disabled="true"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">70</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row>&lt;xml-fragment>&lt;con:entry xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">00002&lt;/con:entry>&lt;/xml-fragment></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">aaaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">"!@#$&amp;*()"</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">782374983274123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">236487&lt;/con:entry></row></con:configuration></con:dataSource><con:property>messageId</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="messageGet"><con:settings/><con:config service="Message" resourcePath="/message/get/{messageId}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="messageGet" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request/><con:originalUri>http://192.168.12.170/message/get/70</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="messageId" value="${DataSource#messageId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>messageGet</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>077ba3d7-dca2-47d6-8922-9b52bd5edd8a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="messageTemplateAddLoad" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="messageTemplateAddLoad"><con:settings/><con:config service="Message" resourcePath="/message/template/add" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="messageTemplateAddLoad" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request/><con:originalUri>http://192.168.12.170/message/template/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}


def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps["${testcase.name}"].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = "00000"
//def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=1;
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="tempAdd" searchProperties="true"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">2</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">消息模板</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>userId</con:property><con:property>entId</con:property><con:property>tempContent</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="tempAdd"><con:settings/><con:config service="Message" resourcePath="/message/template/add" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="tempAdd" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request>{
"userId":${DataSource#userId},
"entId":${DataSource#entId} , 
"tempContent":${DataSource#tempContent}
}</con:request><con:originalUri>http://192.168.12.170/message/template/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>tempAdd</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>d87b14ce-4303-4299-a6c3-6db11367c68d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="tempDelete" searchProperties="true" id="d6eaa7a1-0e98-4667-9962-6a327c2ab624"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">9999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">38</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>userId</con:property><con:property>msgTemplateId</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="tempDelete"><con:settings/><con:config service="Message" resourcePath="/message/template/delete/{userId}/{msgTemplateId}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="tempDelete" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request/><con:originalUri>http://192.168.12.170/message/template/delete/9999/38</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${DataSource#userId}"/>
  <con:entry key="msgTemplateId" value="${DataSource#msgTemplateId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>tempDelete</targetStep></con:config></con:testStep><con:setupScript>import groovy.sql.Sql;
try{
	def DBProperties = testRunner.testCase.getTestSuite();
	def sql = Sql.newInstance(DBProperties.getPropertyValue("DB_Connection_URL"),DBProperties.getPropertyValue("DB_loginname"),DBProperties.getPropertyValue("DB_Password"),DBProperties.getPropertyValue("DB_Driver_Class"));
	try{
	def addtemp = sql.rows("insert into public.sms_temp values ('38','消息模板：你好',9999,'2017-03-16 15:00:52.858','1','1')")

	}catch(Exception e){
		log.info("add temp")
	}
	t
	log.info("add temp done")
}catch(Exception e){
	e.printStackTrace();
}

finally{
	try{ sql.close();log.info("close");}catch(Exception e){log.info("Final:"+e);}
}
</con:setupScript><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>64914245-eb41-43ce-9c26-e10b85d31738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="tempUpdateLoad" searchProperties="true" disabled="true"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">37</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>msgTemplateId</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="tempUpdateLoad"><con:settings/><con:config service="Message" resourcePath="/message/template/update/{msgTemplateId}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="tempUpdateLoad" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>fe8e7a06-d0a6-4b07-ab64-a55269fa8b0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="smsTempUpdate" searchProperties="true" disabled="true"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">9999</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">37</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">消息模板更新001</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>userId</con:property><con:property>entId</con:property><con:property>msgTemplateId</con:property><con:property>tempContent</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="smsTempUpdate"><con:settings/><con:config service="Message" resourcePath="/message/template/update" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="smsTempUpdate" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request>{
"userId":${DataSource#userId},
"entId":${DataSource#entId}, 
"msgTemplateId":${DataSource#msgTemplateId}, 
"tempContent":${DataSource#tempContent}
}</con:request><con:originalUri>http://192.168.12.170/message/template/update</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>smsTempUpdate</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>38ba5b27-fd20-411f-900e-2a210f6736d3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="smsTempQueryLoad" searchProperties="true" disabled="true"><con:settings/><con:testStep type="restrequest" name="smsTempQueryLoad"><con:settings/><con:config service="Message" resourcePath="/message/template/query" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="smsTempQueryLoad" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request/><con:originalUri>http://192.168.12.170/message/template/query</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}


def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps["${testcase.name}"].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = "00000"
//def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=1;
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="smsTempQuery" searchProperties="true" id="b5a18746-0b16-45c2-9d16-d2a59e2b0a44"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">2</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">10</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>userId</con:property><con:property>entId</con:property><con:property>currPage</con:property><con:property>recNumPerPage</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="smsTempQuery"><con:settings/><con:config service="Message" resourcePath="/message/template/query" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="smsTempQuery" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request>{
"userId":${DataSource#userId},
"entId":${DataSource#entId},
"currPage":${DataSource#currPage},
"recNumPerPage":${DataSource#recNumPerPage}
}</con:request><con:originalUri>http://192.168.12.170/message/template/query</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>smsTempQuery</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>f0a4052f-e058-4168-87d5-18cbaa5cc9ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="smsTempQueryById" searchProperties="true" disabled="true"><con:settings/><con:testStep type="datasource" name="DataSource"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">2</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">37</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>userId</con:property><con:property>entId</con:property><con:property>msgTemplateId</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="smsTempQueryById"><con:settings/><con:config service="Message" resourcePath="/message/template/queryById/{userId}/{entId}/{msgTemplateId}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="smsTempQueryById" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request/><con:originalUri>http://192.168.12.170/message/template/queryById/2/1/37</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="entId" value="${DataSource#entId}"/>
  <con:entry key="userId" value="${DataSource#userId}"/>
  <con:entry key="msgTemplateId" value="${DataSource#msgTemplateId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>smsTempQueryById</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>3670d7fb-e32c-4593-b5d6-ca4991e7ce5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>LogFolder</con:name><con:value/></con:property><con:property><con:name>DB_Connection_URL</con:name><con:value>jdbc:postgresql://192.168.12.172:5433/cop_main_test</con:value></con:property><con:property><con:name>DB_loginname</con:name><con:value>postgres</con:value></con:property><con:property><con:name>DB_Password</con:name><con:value>postgres</con:value></con:property><con:property><con:name>DB_Driver_Class</con:name><con:value>org.postgresql.Driver</con:value></con:property><con:property><con:name>ExcelReport</con:name><con:value>COP-Report.xls</con:value></con:property></con:properties><con:tearDownScript>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content,isFormula){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(isFormula==1){  
			Formula f = new Formula(column,row,content);  
			ws.addCell(f);
		}else{
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
		}
}
def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
def xlsName = context.expand('${#TestSuite#ExcelReport}');
statisticsSheetName = "Result";

try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,statisticsSheetName,14,0,"Pass",0);
updateOutput(writableWorkbook,statisticsSheetName,15,0,"Fail",0);
updateOutput(writableWorkbook,statisticsSheetName,16,0,"Total",0);
updateOutput(writableWorkbook,statisticsSheetName,13,1,"Number",0);
updateOutput(writableWorkbook,statisticsSheetName,13,2,"Percentage",0);
passNumFormula = "COUNTIF(E2:E${flag},\"Pass\")"
failNumFormula = "COUNTIF(E2:E${flag},\"Fail\")"
updateOutput(writableWorkbook,statisticsSheetName,14,1,passNumFormula,1);
updateOutput(writableWorkbook,statisticsSheetName,15,1,failNumFormula,1);
updateOutput(writableWorkbook,statisticsSheetName,16,1,"SUM(O2:P2)",1);
updateOutput(writableWorkbook,statisticsSheetName,14,2,"O2/Q2",1);
updateOutput(writableWorkbook,statisticsSheetName,15,2,"P2/Q2",1);
writableWorkbook.write();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}finally{
	writableWorkbook.close();
}
</con:tearDownScript><con:reportParameters/></con:testSuite><con:testSuite name="Basis"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="logoAdd" searchProperties="true" id="5ab1101b-7162-494c-b6e6-f6aec4bcd6a4"><con:settings/><con:testStep type="datasource" name="DataSource" id="f14567e7-2da6-47b5-9766-8ce9e7c3494d"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">http://hehe.com</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">http://hehe.com</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">8</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">null</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00008</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">12312412312</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">http://hehe.com</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">999872</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">http://hehe.com</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_EXIST_ENTERPRISE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">asdas</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">http://hehe.com</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">-1123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">http://hehe.com</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_PARAMETER_NEGATIVE}</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">0</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">http://hehe.com</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00009</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">8</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">http://hehe.com</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_EXIST_ENTERPRISE}</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>entId</con:property><con:property>logoUrl</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="logoAdd"><con:settings/><con:config service="Basis" resourcePath="/basis/logo/add" methodName="Add" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="logoAdd" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request>{
"entId":${DataSource#entId},
"logoUrl":"${DataSource#logoUrl}"
}</con:request><con:originalUri>http://192.168.12.170/basis/logo/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>logoAdd</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>f14567e7-2da6-47b5-9766-8ce9e7c3494d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="logoQuery" searchProperties="true" id="d20e5572-9cfa-4633-a081-7706cb1023de"><con:settings/><con:testStep type="datasource" name="DataSource" id="74bdf12e-e854-4141-9d56-0f5de6722ba2"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">8</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#Project#NOT_EXIST_ENTERPRISE}</con:entry></xml-fragment>]]></row><row>&lt;xml-fragment>&lt;con:entry xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">00002&lt;/con:entry>&lt;/xml-fragment></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">aaa</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00010</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>entId</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="logoQuery"><con:settings/><con:config service="Basis" resourcePath="/basis/logo/query/{entId}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="logoQuery" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request/><con:originalUri>http://192.168.12.170/basis/logo/query/123</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="entId" value="${DataSource#entId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>logoQuery</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>74bdf12e-e854-4141-9d56-0f5de6722ba2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="logoQueryDefault" searchProperties="true" id="1d4b501a-ec8c-41ae-9a41-530c9c655bfc"><con:settings/><con:testStep type="datasource" name="DataSource" id="dd563fec-ceee-499d-b8e5-36eded67ff5d"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">8</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>entId</con:property><con:property>status</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="logoQueryDefault"><con:settings/><con:config service="Basis" resourcePath="/basis/logo/queryDefault/{entId}/{status}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="logoQueryDefault" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request/><con:originalUri>http://192.168.12.170/basis/logo/queryDefault//</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="entId" value="${DataSource#entId}"/>
  <con:entry key="status" value="${DataSource#status}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="666518f1-41a2-4291-8b5b-a997d516abe8"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>logoQueryDefault</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>666518f1-41a2-4291-8b5b-a997d516abe8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>dd563fec-ceee-499d-b8e5-36eded67ff5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="logoAddLoad" searchProperties="true" id="366e64e0-ec52-4366-aef9-a3bd3e52f18f" disabled="true"><con:settings/><con:testStep type="restrequest" name="logoAddLoad"><con:settings/><con:config service="Basis" resourcePath="/basis/logo/add" methodName="Add" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="logoAddLoad" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request/><con:originalUri>http://192.168.12.170/basis/logo/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}


def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps["${testcase.name}"].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = "00000"
//def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=1;
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="themeAddLoad" searchProperties="true" id="8e025183-68cd-42cc-9462-38f9a07f76cc" disabled="true"><con:settings/><con:testStep type="restrequest" name="themeAddLoad"><con:settings/><con:config service="Basis" resourcePath="/basis/theme/add" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="themeAddLoad" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}


def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps["${testcase.name}"].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = "00000"
//def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=1;
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="themeAdd" searchProperties="true" id="83f96711-d9f3-489e-8b01-e598c0b9097b"><con:settings/><con:testStep type="datasource" name="DataSource" id="efc625b4-b41b-42ba-8aae-287ab15abe22"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">8</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">http://meishi.com</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>entId</con:property><con:property>loginPicUrl</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="themeAdd"><con:settings/><con:config service="Basis" resourcePath="/basis/theme/add" methodName="Method 1-1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="themeAdd" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request>{"entId":${DataSource#entId}, "loginPicUrl ":"${DataSource#loginPicUrl}" }</con:request><con:originalUri>http://192.168.12.170/basis/theme/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>themeAdd</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>efc625b4-b41b-42ba-8aae-287ab15abe22</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="themeQueryLoad" searchProperties="true" id="35e70d19-9248-40c5-9f53-467b29980fd9" disabled="true"><con:settings/><con:testStep type="restrequest" name="themeQueryLoad"><con:settings/><con:config service="Basis" resourcePath="/basis/theme/query" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="themeQueryLoad" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}


def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps["${testcase.name}"].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = "00000"
//def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=1;
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="themeQueryLoginPic" searchProperties="true" id="67f907a1-49a3-45ba-930d-f9dff4c74fa0"><con:settings/><con:testStep type="datasource" name="DataSource" id="af01c343-9e2b-4b3d-af3d-70a07359e6d4"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">123</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>entId</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="themeQueryLoginPic"><con:settings/><con:config service="Basis" resourcePath="/basis/theme/queryLoginPic/{entId}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="themeQueryLoginPic" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request/><con:originalUri>http://192.168.12.170/basis/theme/queryLoginPic/entId</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="entId" value="${DataSource#entId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>themeQueryLoginPic</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>af01c343-9e2b-4b3d-af3d-70a07359e6d4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="themeAddSkin" searchProperties="true" id="0fd32611-2777-4740-be68-a8575d50b27f"><con:settings/><con:testStep type="datasource" name="DataSource" id="0b2dedcb-a36c-49de-9884-0e84f7ab678f"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">8</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>entId</con:property><con:property>colorValue</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="themeAddSkin"><con:settings/><con:config service="Basis" resourcePath="/basis/theme/addSkin/{entId}/{colorValue}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="themeAddSkin" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request/><con:originalUri>http://192.168.12.170/basis/theme/addSkin/8/RED</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="entId" value="${DataSource#entId}"/>
  <con:entry key="colorValue" value="${DataSource#colorValue}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>themeAddSkin</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>0b2dedcb-a36c-49de-9884-0e84f7ab678f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="themeGetDefaultColor" searchProperties="true" id="9f941f09-9cb9-4885-8ca2-8465da59bb6e"><con:settings/><con:testStep type="datasource" name="DataSource" id="576256ec-3570-42d7-9419-faa2fe252e39"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">8</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">00000</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>entId</con:property><con:property>expectedcode</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="themeGetDefaultColor"><con:settings/><con:config service="Basis" resourcePath="/basis/theme/getDefaultColor/{entId}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="themeGetDefaultColor" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.12.172:10002</con:endpoint><con:request/><con:originalUri>http://192.168.12.170/basis/theme/getDefaultColor/8</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="entId" value="${DataSource#entId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Output"><con:settings/><con:config><script>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
}

def writeFlag(flagFileName){
	def flagFile = new File(flagFileName);
	if(flagFile.exists()){
		def flag = Integer.parseInt(flagFile.getText());
		flag++;
		flagFile.write("${flag}");
	}
}

def filterCode(wsdlstring){
	def strlen = wsdlstring.length();
	for(def i = 0;i &lt; strlen-12;i++){
		if(wsdlstring[i..i+3] == "code"){
			code = wsdlstring[i+7..i+11]
			break
		}else{
			code = "Error"
		}
	}
	if(strlen &lt; 10){
		code = "Error"
	}
}

def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
log.info(flag)
def xlsName = context.expand('${#TestSuite#ExcelReport}');
SheetName = "Result";
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
//获取上下文对象,转化成groovyUtils对象
def testcase = testRunner.testCase;
def wsdlResponse=testRunner.testCase.testSteps[testcase.name].getTestRequest().getResponseContentAsString()
filterCode(wsdlResponse);
def expectedcode = context.expand( '${DataSource#expectedcode}' )
def dataSource=testRunner.testCase.testSteps['DataSource']
def datarow=dataSource.getCurrentRow()
startrow=Integer.parseInt(flag);
try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,SheetName,0,startrow,testcase.name+"-"+datarow);
updateOutput(writableWorkbook,SheetName,5,startrow,wsdlResponse);
updateOutput(writableWorkbook,SheetName,2,startrow,code);
updateOutput(writableWorkbook,SheetName,3,startrow,expectedcode);
if(expectedcode==code){
	updateOutput(writableWorkbook,SheetName,4,startrow,"Pass");
}else{
	updateOutput(writableWorkbook,SheetName,4,startrow,"Fail");
}
writeFlag(flagFileName);
writableWorkbook.write();
writableWorkbook.close();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}
</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>themeGetDefaultColor</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>576256ec-3570-42d7-9419-faa2fe252e39</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>LogFolder</con:name><con:value/></con:property><con:property><con:name>DB_Connection_URL</con:name><con:value>jdbc:postgresql://192.168.12.172:5433/cop_main_test</con:value></con:property><con:property><con:name>DB_loginname</con:name><con:value>postgres</con:value></con:property><con:property><con:name>DB_Password</con:name><con:value>postgres</con:value></con:property><con:property><con:name>DB_Driver_Class</con:name><con:value>org.postgresql.Driver</con:value></con:property><con:property><con:name>ExcelReport</con:name><con:value>COP-Report.xls</con:value></con:property></con:properties><con:tearDownScript>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content,isFormula){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		if(isFormula==1){  
			Formula f = new Formula(column,row,content);  
			ws.addCell(f);
		}else{
		if(content=="Pass"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.GREEN);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else if(content=="Fail"){
			def wc = new jxl.write.WritableCellFormat();
			wc.setBackground(jxl.format.Colour.RED);
			ws.addCell(new jxl.write.Label(column,row,content,wc));
		}else{
		ws.addCell(new jxl.write.Label(column,row,content));
		}
		}
}
def flagFileName = (context.expand('${#TestSuite#LogFolder}')+"flag.txt");
def flagFile = new File(flagFileName);
def flag = flagFile.getText();
def xlsName = context.expand('${#TestSuite#ExcelReport}');
statisticsSheetName = "Result";

try{
Workbook workbook=Workbook.getWorkbook(new File(xlsName));
writableWorkbook =  Workbook.createWorkbook(new File(xlsName), workbook);
updateOutput(writableWorkbook,statisticsSheetName,14,0,"Pass",0);
updateOutput(writableWorkbook,statisticsSheetName,15,0,"Fail",0);
updateOutput(writableWorkbook,statisticsSheetName,16,0,"Total",0);
updateOutput(writableWorkbook,statisticsSheetName,13,1,"Number",0);
updateOutput(writableWorkbook,statisticsSheetName,13,2,"Percentage",0);
passNumFormula = "COUNTIF(E2:E${flag},\"Pass\")"
failNumFormula = "COUNTIF(E2:E${flag},\"Fail\")"
updateOutput(writableWorkbook,statisticsSheetName,14,1,passNumFormula,1);
updateOutput(writableWorkbook,statisticsSheetName,15,1,failNumFormula,1);
updateOutput(writableWorkbook,statisticsSheetName,16,1,"SUM(O2:P2)",1);
updateOutput(writableWorkbook,statisticsSheetName,14,2,"O2/Q2",1);
updateOutput(writableWorkbook,statisticsSheetName,15,2,"P2/Q2",1);
writableWorkbook.write();
}catch (Exception e){      
	e.printStackTrace();
	log.info(e)
}finally{
	writableWorkbook.close();
}
</con:tearDownScript><con:reportParameters/></con:testSuite><con:requirements/><con:properties><con:property><con:name>SUCCESS</con:name><con:value>00000</con:value></con:property><con:property><con:name>FAILED</con:name><con:value>00001</con:value></con:property><con:property><con:name>NOT_EXIST_PATH</con:name><con:value>00002</con:value></con:property><con:property><con:name>TIME_FAULT</con:name><con:value>00003</con:value></con:property><con:property><con:name>NO_AUTHORITY</con:name><con:value>00004</con:value></con:property><con:property><con:name>NO_PRODUCT</con:name><con:value>00005</con:value></con:property><con:property><con:name>PARAM_FAULT</con:name><con:value>00006</con:value></con:property><con:property><con:name>CAPTCHA_ERROR</con:name><con:value>00007</con:value></con:property><con:property><con:name>PARAM_EMPTY</con:name><con:value>00008</con:value></con:property><con:property><con:name>PARAM_OUT_OF_RANGE</con:name><con:value>00009</con:value></con:property><con:property><con:name>PARAM_INVALID_TYPE</con:name><con:value>00010</con:value></con:property><con:property><con:name>PARAM_SPECIAL_CHAR</con:name><con:value>00011</con:value></con:property><con:property><con:name>CAPTCHA_NULL</con:name><con:value>00012</con:value></con:property><con:property><con:name>NOT_PARAMETER_NEGATIVE</con:name><con:value>00013</con:value></con:property><con:property><con:name>PARENT_ID_ERROR</con:name><con:value>00312</con:value></con:property><con:property><con:name>DEP_ID_ERROR</con:name><con:value>00313</con:value></con:property><con:property><con:name>EMP_ID_ERROR</con:name><con:value>00314</con:value></con:property><con:property><con:name>EXIST_GROUP_FOLLOW</con:name><con:value>00316</con:value></con:property><con:property><con:name>NOT_PHONE_ERROR</con:name><con:value>00317</con:value></con:property><con:property><con:name>EXIST_EMPLOYEE</con:name><con:value>00318</con:value></con:property><con:property><con:name>NOT_EXIST_EMPLOYEE</con:name><con:value>00319</con:value></con:property><con:property><con:name>NOT_EXIST_EMP_ID_USER_ID_NEGATIVE</con:name><con:value>00320</con:value></con:property><con:property><con:name>FOLLOW_EXIST_ADDRESS</con:name><con:value>00321</con:value></con:property><con:property><con:name>NOT_EXIST_GROUP</con:name><con:value>00322</con:value></con:property><con:property><con:name>NOT_EXIST_ADDRESS_FOLLOW</con:name><con:value>00323</con:value></con:property><con:property><con:name>NOT_EXIST_EMP_ID_USER_ID</con:name><con:value>00324</con:value></con:property><con:property><con:name>EXIST_EMPLOYEE_IN_GROUP</con:name><con:value>00325</con:value></con:property><con:property><con:name>NOT_EXIST_PARENT_GROUP</con:name><con:value>00327</con:value></con:property><con:property><con:name>EMP_IS_NOT_EXIST_GROUP</con:name><con:value>00328</con:value></con:property><con:property><con:name>EMP_EXIST</con:name><con:value>00329</con:value></con:property><con:property><con:name>EMP_ATTENTION_NOT_EXIST</con:name><con:value>00330</con:value></con:property><con:property><con:name>DEP_ATTENTION_NOT_EXIST</con:name><con:value>00331</con:value></con:property><con:property><con:name>NOT_EXIST_ACCOUNT</con:name><con:value>00100</con:value></con:property><con:property><con:name>PWD_ERROR</con:name><con:value>00101</con:value></con:property><con:property><con:name>NAME_EXIST</con:name><con:value>00102</con:value></con:property><con:property><con:name>NOT_EXIST_ENTERPRISE</con:name><con:value>00103</con:value></con:property><con:property><con:name>ENT_KEY_FAULT</con:name><con:value>00104</con:value></con:property><con:property><con:name>NOT_EXIST_ROLE</con:name><con:value>00105</con:value></con:property><con:property><con:name>KEY_ERROR</con:name><con:value>00106</con:value></con:property><con:property><con:name>NOT_EXIST_PARENTID</con:name><con:value>00107</con:value></con:property><con:property><con:name>KEYANDTERMINAL</con:name><con:value>00108</con:value></con:property><con:property><con:name>OID_ERROR</con:name><con:value>00109</con:value></con:property><con:property><con:name>PKG_ID_ERROR</con:name><con:value>00110</con:value></con:property><con:property><con:name>ROLE_IN_USE</con:name><con:value>00111</con:value></con:property><con:property><con:name>MODEL_PKG_DEL_ERROR</con:name><con:value>00112</con:value></con:property><con:property><con:name>ROLE_MENU_ADD_BATCH_ERR</con:name><con:value>00113</con:value></con:property><con:property><con:name>ROLE_MENU_DEL_BATCH_ERR</con:name><con:value>00114</con:value></con:property><con:property><con:name>ROLE_MODEL_ADD_BATCH_ERR</con:name><con:value>00115</con:value></con:property><con:property><con:name>ROLE_MODEL_DEL_BATCH_ERR</con:name><con:value>00116</con:value></con:property><con:property><con:name>ROLE_DEL_ERROR</con:name><con:value>00117</con:value></con:property><con:property><con:name>ROLE_MENU_DEL_ERROR</con:name><con:value>00118</con:value></con:property><con:property><con:name>ROLE_MODEL_DEL_ERROR</con:name><con:value>00119</con:value></con:property><con:property><con:name>USER_CHECK_PSW</con:name><con:value>00120</con:value></con:property><con:property><con:name>USER_ROLE_DEL_ERR</con:name><con:value>00121</con:value></con:property><con:property><con:name>PKG_IN_USE</con:name><con:value>00122</con:value></con:property><con:property><con:name>URL_ADD_ERR</con:name><con:value>00123</con:value></con:property><con:property><con:name>URL_UPD_ERR</con:name><con:value>00124</con:value></con:property><con:property><con:name>ROLE_MENU_UPD_ERR</con:name><con:value>00125</con:value></con:property><con:property><con:name>ENT_ORDER_PKG_ADD_BATCH_ERR</con:name><con:value>00127</con:value></con:property><con:property><con:name>ROLE_MODEL_UPD_ERR</con:name><con:value>00128</con:value></con:property><con:property><con:name>ROLE_ADD_ERR</con:name><con:value>00130</con:value></con:property><con:property><con:name>USER_ADD_ERR</con:name><con:value>00131</con:value></con:property><con:property><con:name>USER_ROLE_ADD_ERR</con:name><con:value>00132</con:value></con:property><con:property><con:name>ENT_ORDER_PKG_DEL_BATCH_ERR</con:name><con:value>00133</con:value></con:property><con:property><con:name>LOGIN_APP_NOT_FIRST_ERR</con:name><con:value>00134</con:value></con:property><con:property><con:name>SMS_ERR</con:name><con:value>00135</con:value></con:property><con:property><con:name>KEY_MDN_ERR</con:name><con:value>00136</con:value></con:property><con:property><con:name>KEY_ID_ERR</con:name><con:value>00137</con:value></con:property><con:property><con:name>NOT_EXIST_MENU</con:name><con:value>00139</con:value></con:property><con:property><con:name>RESULT_NULL</con:name><con:value>00200</con:value></con:property><con:property><con:name>QDB_EXCEPTION</con:name><con:value>00201</con:value></con:property><con:property><con:name>IDB_EXCEPTION</con:name><con:value>00202</con:value></con:property><con:property><con:name>UDB_EXCEPTION</con:name><con:value>00203</con:value></con:property><con:property><con:name>DDB_EXCEPTION</con:name><con:value>00204</con:value></con:property><con:property><con:name>EXECUTE_EXCEPTION</con:name><con:value>00205</con:value></con:property><con:property><con:name>CONNECT_EXCEPTION</con:name><con:value>00601</con:value></con:property><con:property><con:name>DISCONNECT_EXCEPTION</con:name><con:value>00602</con:value></con:property><con:property><con:name>SENDINFO_FAILED</con:name><con:value>00603</con:value></con:property><con:property><con:name>RECEIVEINFO_FAILED</con:name><con:value>00604</con:value></con:property><con:property><con:name>ENT_LOGO_NOT_EXIST</con:name><con:value>00701</con:value></con:property><con:property><con:name>ENT_SKIN_NOT_EXIST</con:name><con:value>00702</con:value></con:property><con:property><con:name>DATE_OUT_OF_RANGE</con:name><con:value>00801</con:value></con:property><con:property><con:name>DATE_FORMAT_ERROR</con:name><con:value>00802</con:value></con:property><con:property><con:name>NOTICE_NOT_EXIST</con:name><con:value>00803</con:value></con:property><con:property><con:name>MSG_TEMP_NOT_EXIST</con:name><con:value>00804</con:value></con:property></con:properties><con:afterLoadScript>import java.io.*;
import jxl.*;
import jxl.write.*;
import java.util.*;

def updateOutput(writableWorkbook,sheetName,column,row,content){
		Sheet[] sheet= writableWorkbook.getSheets();
		ws = writableWorkbook.getSheet(sheetName);
		if(ws==null){
		ws = writableWorkbook.createSheet(sheetName,sheet.length)
		}
		ws.addCell(new jxl.write.Label(column,row,content));
}


def flagFileName ="flag.txt";
def flagFile = new File(flagFileName);
def excelName = "COP-Report.xls";
def worksheet = "Result";

WritableWorkbook workbook;
try{
	workbook = Workbook.createWorkbook(new File(excelName));
	WritableSheet sheet = workbook.createSheet(worksheet, 0);
	updateOutput(workbook,worksheet,0,0,"Case ID");
	updateOutput(workbook,worksheet,1,0,"Description");
	updateOutput(workbook,worksheet,2,0,"Response Code");
	updateOutput(workbook,worksheet,3,0,"Expected Code");
	updateOutput(workbook,worksheet,4,0,"Result");
	updateOutput(workbook,worksheet,5,0,"Response Details");
	workbook.write();
	workbook.close();
}catch(Exception e){
	e.printStackTrace();
	log.info(e);
}

if(!flagFile.exists()){
	flagFile.createNewFile();
	flagFile.write("1");
}
flagFile.write("1");
</con:afterLoadScript><con:wssContainer/><con:databaseConnectionContainer><con:databaseConnection><con:name>1</con:name><con:driver>org.postgresql.Driver</con:driver><con:connectionString>jdbc:postgresql://192.168.12.172:5433/cop_main_test?user=postgres&amp;password=PASS_VALUE</con:connectionString><con:password>postgres</con:password></con:databaseConnection></con:databaseConnectionContainer><con:oAuth2ProfileContainer/><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting><con:sensitiveInformation/></con:soapui-project>